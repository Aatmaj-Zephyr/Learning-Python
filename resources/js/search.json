[[{"i":"learning-python","l":"Learning-Python \uD83D\uDC4D","p":["Hi,\uD83E\uDD1F in this repo you will find all material required for the learning python course!\uD83D\uDE01 All material from sample codes to exercise solutions can be found here. \uD83D\uDE07 For any suggestions, feedback or doubts, feel free to contact me via LinkedIn or Gmail. \uD83D\uDE0A","![LinkedIn] 1![Gmail] 2","⭐ Star this repo \uD83E\uDD29 and follow me for updates!\uD83D\uDE42 \uD83D\uDC4D \uD83D\uDCA5\uD83D\uDE4F\uD83D\uDE4F\uD83D\uDE4F"]},{"i":"feel-free-to-fork-this-repo","l":"Feel free to fork this repo!","p":["Advanced-","All code, exercise solutions and relevant material will be on this repo.\uD83D\uDC4D","Basic-","Database connectivity","File handling in Python","Form designing","GUI and design","Hi all!\uD83E\uDD1F I am launching a brand new blog series for self-learning python. Learn python from the scratch! Have fun while learning Python in an easy way.","Interesting Projects","Intermediate-","Lists, tuples and dictionaries","Loops and nested loops","MySql","Numeric and Mathematical Modules","OOP techniques","String functions","These blogs will be published on the Dev.to platform. Here is the hyperlink. \uD83D\uDE01","This course is for everyone from beginner to advanced. For that, it is designed in three levels- basic, intermediate and advanced. The topics covered are as follows-","User defined functions","Variables and operators"]},{"i":"hope-to-hear-from-you-all-in-the-comments-on-devto-please-feel-free-to-add-any-suggestions-too","l":"Hope to hear from you all in the comments on dev.to! Please feel free to add any suggestions too!","p":["Find more python code, university notes and practicals here","Learning Python- Intermediate course: Day 1, User defined functions","Learning Python- Intermediate course: Day 10, Complex numbers part 2","Learning Python- Intermediate course: Day 11, Random numbers","Learning Python- Intermediate course: Day 12, Summary of the week","Learning Python- Intermediate course: Day 13, The Statistics Module","Learning Python- Intermediate course: Day 14, Introduction to the Decimal module","Learning Python- Intermediate course: Day 15, Complete guide to the fractions module","Learning Python- Intermediate course: Day 16, Summary of the week","Learning Python- Intermediate course: Day 17, Tkinter — a fast and easy way to create GUI applications.","Learning Python- Intermediate course: Day 18, Tkinter — Types of Widgets part 1","Learning Python- Intermediate course: Day 19, Tkinter — Types of Widgets part 2","Learning Python- Intermediate course: Day 2, returning values from methods","Learning Python- Intermediate course: Day 20, Tkinter — Types of Widgets part 3","Learning Python- Intermediate course: Day 21, Hello world in Tkinter !","Learning Python- Intermediate course: Day 22, Bold or Italics !","Learning Python- Intermediate course: Day 23, IntVar() and Radio-buttons.","Learning Python- Intermediate course: Day 24, Summary of the week and Adding Colors","Learning Python- Intermediate course: Day 25, Buttons, Entry and Textboxes","Learning Python- Intermediate course: Day 26, Password Manager-Tkinter","Learning Python- Intermediate course: Day 27, Entry keypress event","Learning Python- Intermediate course: Day 28, Summary of the week","Learning Python- Intermediate course: Day 29, Sliders in Tkinter","Learning Python- Intermediate course: Day 3, Recursion in Python","Learning Python- Intermediate course: Day 30, Spinbox and Labelbox","Learning Python- Intermediate course: Day 31, Coordinate positions","Learning Python- Intermediate course: Day 32, The Menubutton Widget","Learning Python- Intermediate course: Day 33, The Menu Widget","Learning Python- Intermediate course: Day 34, Toplevel, Panedwindow and Message widgets","Learning Python- Intermediate course: Day 35, MessageBox widget","Learning Python- Intermediate course: Day 36, Summary of the week","Learning Python- Intermediate course: Day 37, File handling in Python","Learning Python- Intermediate course: Day 38, OOP","Learning Python- Intermediate course: Day 39, OOP-Constructor","Learning Python- Intermediate course: Day 4, Summary of the week, Guidelines for Recursion and high-level questions.","Learning Python- Intermediate course: Day 40, Summary of the week and more about OOP","Learning Python- Intermediate course: Day 41, Inheritance in Python","Learning Python- Intermediate course: Day 42, Polymorphism.","Learning Python- Intermediate course: Day 43, DDD and more on OOP","Learning Python- Intermediate course: Day 44, Summary of the week, examples and exercises","Learning Python- Intermediate course: Day 5, Exploring the math module","Learning Python- Intermediate course: Day 6, Math Exercises","Learning Python- Intermediate course: Day 7, Making Python modules","Learning Python- Intermediate course: Day 8, Summary of the week and nested Modules","Learning Python- Intermediate course: Day 9, Complex numbers part 1","Learning Python-Basic course: Day 1, Introduction and Installation","Learning Python-Basic course: Day 10, Lists in Python","Learning Python-Basic course: Day 11, Multidimensional lists and Tuples","Learning Python-Basic course: Day 12, Basic algorithms","Learning Python-Basic course: Day 13, Summary of the week and Stack implementation","Learning Python-Basic course: Day 14, Basic Exception and error handling using try-except","Learning Python-Basic course: Day 15, More about try-except","Learning Python-Basic course: Day 16, Fractal lists and other questions","Learning Python-Basic course: Day 17, Summary of the week and Insertion sort","Learning Python-Basic course: Day 18, Dictionaries in Python","Learning Python-Basic course: Day 19, Practicing Dictionary exercises","Learning Python-Basic course: Day 2, Statements, Comments and Indentation","Learning Python-Basic course: Day 20, HashTables via Dictionaries","Learning Python-Basic course: Day 21, Summary of the week and dictionary exercises.","Learning Python-Basic course: Day 22, String Methods Part-1","Learning Python-Basic course: Day 23, String Methods Part-2","Learning Python-Basic course: Day 24, String Methods Part-3","Learning Python-Basic course: Day 25, Summary of the basic course.","Learning Python-Basic course: Day 3, Operators and If-elif-else","Learning Python-Basic course: Day 4, The for loop","Learning Python-Basic course: Day 5, Summary of the week and Interview questions","Learning Python-Basic course: Day 6, The While Loop and more questions\uD83E\uDD13!","Learning Python-Basic course: Day 7, Exercises and coding challenges⚔️","Learning Python-Basic course: Day 8, Unicode in Python","Learning Python-Basic course: Day 9, Summary of the week and exercises."]}],[{"l":"Basic"},{"i":"basic-module-of-the-learning-python-course","l":"Basic module of the Learning Python course.","p":["Syllabus-","Variables and operators","Loops and nested loops","Lists, tuples and dictionaries","String functions"]}],[{"i":"learning-python--basic-course-day-4-the-for-loop","l":"Learning Python- Basic course: Day 4, The for loop","p":["Originally published on the dev.to platform here"]},{"i":"welcome-all-to-the-day-4-of-our-course-today-we-will-learn-about-the-for-loop-and-all-it-s-pitfalls","l":"\uD83E\uDD1FWelcome all to the day 4 of our course. Today we will learn about the for loop and all it's pitfalls.\uD83D\uDE00","p":["Loops in python The For loop- Everyone knows that the For Loop is a type of loop which runs statements for a given number of times. Here is the for loop syntax-","Again, no curly braces, just indention. Here is a sample program which prints hello five times. Note the mistakes often made by beginners.","Okay, the running variable i is incremented by 1. So until i equals five, the program keeps on running? Well, actually no. \uD83D\uDE32 This happens in Java and C. But Python differs a bit over here.","In Python, the running variable is assigned a new value and not incremented. \uD83D\uDE2E What happens is something like this- When you say \"for i in range(5)\", a list of numbers from zero to four [0, 1, 2, 3, 4] will be generated. (Note 0-4 and not 0-5). Then i will be assigned all the values from that list, in order, one by one. Even if we change the value of i in the middle, it doesn't affect the loop as i is just assigned the next value. more about it here I know, loss of flexibility.\uD83D\uDE22 But we can always convert the for loop into a while loop. \uD83D\uDE43","Although we cannot change the running variable, there is no restriction against using it. If we want to change the default value of increment of i in the list, we can add another parameter in the for loop, as shown below.","Here is a sample program to find factors of a number. There are two bugs in the program. Can you fix them? \uD83E\uDD73","If you have already spotted them, comment the answers below\uD83D\uDC47. For those who havent, the answer is here","The range() function makes a list of values, and the running variable is assigned the values one by one. We can also make a list manually, but that part is to be covered when dealing with Python lists, later \uD83D\uDCC5.","One thing to note here is that any changes in the variable indicating the end values doesn't affect the main program. \uD83D\uDE10Example, in the above program if we change the value of n in the indent, it wont affect the number of times the statements are executed. This is because the range list is made already using the value we have given at the time of generating the for lop. Here is a program in which the values of end variable are changed, but the program won't get affected. \uD83E\uDD13","Break statement- The break statement is used to end the for loop in middle. After this statement is executed, the last for loop terminates, and the control goes to the next statements Similarly Python has the continue statement, which starts the next iteration of the loop again. Syntax is as follows-","For those who are new to the concept, you will find a really good explanation here. Here is an example- This program finds if a number is prime or not.","Don't get disheartened if all things are not clear right away. We are going to solve many more sample questions in the next lectures. \uD83D\uDE0E Do try these exercises given below, (or at least see the answers). This will help strengthen the concepts or reinforce them further. \uD83D\uDCA5","Exercise- 2) Write a program to calculate the factors, the sum of the factors and the number of factors of the number. Answer 3) Write a program to find if a number is a perfect number or not. (Perfect number is a number whose sum of factors excluding itself is equal to number eg 6,28 are perfect numbers) Answer","Yes, these exercises were repetitive.\uD83E\uDD71 But tomorrow we will do some really fantastic questions which actually are asked in interviews. Follow me for updates so you don't miss out on tomorrows special edition of learning Python course \uD83D\uDE01.\uD83D\uDE09","\uD83D\uDE0E Your suggestions motivate me, so please please please let me know in the comment section if you this part or not. \uD83E\uDDD0 And don't forget to like the post on dev.to if you did. \uD83D\uDE0D"]},{"i":"please-star-the-repo","l":"Please star the repo \uD83E\uDD29"}],[{"l":"Exercise 1"},{"i":"bug-one-range-begins-from-zero","l":"Bug one. Range begins from zero.","p":["The range can;t begin from zero. Because if it does, then the first value of i will be 0, and integer division be zero is not possible. This will result in the following error"]},{"i":"bug-two-while-loop-must-end-with-n1-and-not-n","l":"Bug two: while loop must end with n+1 and not n","p":["Let us say that we consider the input 10. The last value of the i will be 9 and not 10. Hence the result will be","But we want the number 10 to be included in the set of divisors. Hence we put n+1 at the ending bracket."]}],[{"i":"learning-python--basic-course-day-13-summary-of-the-week-and-stack-implementation","l":"Learning Python- Basic course: Day 13, Summary of the week and Stack implementation","p":["Originally published on the Dev.to platform here"]},{"i":"today-let-us-generate-multidimensional-collatz-lists-simulate-stacks-and-queues-and-write-out-biggest-piece-of-code-yet","l":"Today let us generate multidimensional Collatz lists, simulate Stacks and Queues and write out biggest piece of code yet..."},{"l":"Summary of the week-","p":["Day 10 We learnt about lists in Python, and various list functions like popping, appending, copying and much more. We then used these functions for creating a program for dynamic generation of lists.","Day 11 We learnt about multidimensional lists, dynamic generation of multidimensional lists and had an introduction to tuples. We learnt that tuples were non mutable lists.","Day 12 We used lists to make algorithms like bubble sorting, binary searching and sequential searching."]},{"l":"Sample questions","p":["Before going to stacks and queues, let us first check out an application of the dynamic generation of multidimensional lists.","Make a multidimensional list which stores the sequence of the Collatz conjecture for integers 1-10.","Output-","Implementation of a Stack-","Implement a stack, with LIFO (Last in first out). The user can push, pop, and print the stack anytime.","This is the largest program we have ever written so far. See those nesting levels? But do not worry, everything is properly explained in the comments beside the code. For those new to LIFO and FIFO, please visit the Stack data structure"]},{"l":"Exercises-","p":["Write a program to make a list of prime numbers in an effective way. First store prime numbers in an list, then next prime number is the one which is not divisible by the previous prime numbers.","Our stack implementation program has many hitches. Some error handling will be covered later on, but now we will focus particularly on this error-","This error is caused by popping from an empty list. Modify the program to error check this, and gove this output-","Answer is in the learning Python repo, but I would like everyone to fork the sample program we did earlier and open a 'pull request' for this modification. For those new with Pull requests, here is a guide.","Write a program for implementation of queue FIFO data structure. Hint- modify the Stack implementation.","Sample output-","Again, answer is in this repo, but please fork it and try on your own\uD83D\uDE42","We all know that neither me nor you have ever seen each other. Learning in remote environment is a difficult, and teaching is perhaps even more difficult. Teaching is never a one-way process. I request everyone to participate actively in this course, either through comments on dev.to or forking on this Github Learning-Python repo\uD83D\uDE03 \uD83D\uDE03 \uD83D\uDE03","For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways"]}],[{"l":"Exercise solutions","p":["Please open a pull request and try to solve the exercises first before looking at the solutions."]}],[{"i":"learning-python-basic-course-day-8-unicode-in-python","l":"Learning Python-Basic course: Day 8, Unicode in Python","p":["Originally published on the dev.to platform here"]},{"i":"welcome-till-now-we-have-dealt-enough-with-numbers-now-is-the-time-to-add-unicode-to-our-arsenal","l":"\uD83E\uDD1F Welcome! Till now, we have dealt enough with numbers. Now is the time to add Unicode to our arsenal.\uD83D\uDE0E","p":["Unicode in Python"]},{"i":"#","p":["Python and Java support Unicode characters.\uD83D\uDE03 The ord() method converts a character into its Unicode code. It takes one argument: a string containing a single Unicode character. In other words, given string of length 1, the function returns an integer giving it's corresponding Unicode value. For example, ord('a') returns the integer 97, ord('€')(Euro sign) returns 8364. Here is a sample which takes 10 characters and prints their Unicode values-","Here is a output-","Try it out with your names too!!!","The chr() function does just the opposite as the ord() function. It converts integers into Unicode characters. Example if we input 97, the output will be 'a', and chr(€)=8364","Here is a sample program print Unicode characters-","Now let us input some values. OUTPUT-","Here is another sample to prove that ord() and chr() are absolutely opposite of each other","Exercise 1) If we interchange ord() and chr(), will the program still work? Answer: NO","Write a program to give the following output-","Answer here.","Modify the above program slightly to give the following output.","Modify the above program to give the following output-","The programs may look repetitive, but trust me, they provide a good practice for practicing nested for loops.","✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment section on dev.to \uD83D\uDC47. And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me. \uD83D\uDE09 Thank you all\uD83D\uDC4D","⭐Star this repo \uD83E\uDD29 and follow me for updates!\uD83D\uDE42 \uD83D\uDC4D \uD83D\uDCA5 \uD83D\uDE4F\uD83D\uDE4F\uD83D\uDE4F"]}],[{"l":"Exercise 1","p":["No. we cannot replace, it because in the program chr takes input i, which is a number while ord requires a string input.","OUTPUT-"]}],[{"l":"Day 18","p":["Learning Python-Basic course: Day 18, Dictionaries in Python","Original;y published on the dev.to platform here."]},{"i":"welcome-all-today-we-will-cover-dictionaries","l":"Welcome all\uD83E\uDD1F Today we will cover dictionaries!","p":["Dictionary is simply a collection of unordered key value pairs Or sometimes referred as a 'hash table' of key value pairs. Dictionary holds key:value pair. this means that every value in an dictionary is mapped with some other value. Values in a dictionary can be of any datatype. Dictionaries cannot have two items with the same key for obvious reasons. example","Here is a quick difference between lists, tuples and dictionaries. image"]},{"l":"Hash table","p":["A Hash table is a data structure. A hash table is a data structure that implements an associative array abstract data type that can map keys to values. A hash table uses a hash function to compute an index also called as the hash code, into a array of buckets or slots, from which the desired value can be found.","As of Python version 3.7, dictionaries are ordered. In Python 3.6 and earlier, dictionaries are unordered."]},{"l":"Sample program-","p":["Here is a sample program just to get you started with dictionaries. It is quite easy to understand and commented whenever necessary"]},{"l":"Multidimensional dictionaries","p":["Same story needs no explanation!","Exercise-","Make a dictionary which contains a list and a tuple. Then append the tuple in the list in the dictionary.","Dynamic generation of dictionaries- Write a program to take names of five students and their corresponding marks, put them in an dictionary. output-","Answers will be found here","So friends that's all for this part. \uD83D\uDE0AFor any suggestions please ping me\uD83E\uDD20. Here is my Gmail- aatmaj.mhatre@gmail.com\uD83E\uDD1F Don't forget to follow me for updates on the course.\uD83D\uDE0A"]}],[{"l":"Day 19","p":["Learning Python-Basic course: Day 19, Practicing Dictionary exercises","Originally published on the dev.to platform here"]},{"i":"today-we-are-going-to-solve-some-questions-related-to-dictionaries-so-in-case-you-have-missed-yesterday-s-blog-where-we-have-covered-dictionaries-in-depth-click-here","l":"Today we are going to solve some questions related to dictionaries. \uD83D\uDE04 So in case you have missed yesterday's blog where we have covered dictionaries in depth, click here.","p":["Just a bit of revision of dictionaries which we covered yesterday. Defination-","A dictionary is defined as a general-purpose data structure for storing a group of objects. A dictionary is associated with a set of keys and each key has a single associated value.","Dictionaries are used for retrieving a value from a key In dictionaries, the keys are mapped with specific values. They are somewhat similer to hashtables. we will cover hashtables in tomorrow's part, but today we will first take a closer look at how dictionaries operate by solving some questions related to them.","Sample program 1 Let's see how to fuse two separate lists into a key-value pair dictionary.","In the above program, we have fused the keys(list a) and the values(tuple b) into a dictionary(c and d ). In the second method, we have used two methods dict() and zip(). The dict() method is used to create a dictionary while the zip method is used to zip together two key-value pairs.","Sample question 2) Write code to make this dictionary using for loop-","Solution-","Exercise 1) Modify the above code to give the following output-","(Don't mind the order)","Sample question 3) Write a program for making the dictionary shown below using for loops-","OUTPUT-","Exercise 2)- Modify the above program for making the following dictionary-","Answers to the above exercise will be found as usual in the Learning-Python Repository"]},{"l":"Fun exercise","p":["Can you find the levels of nesting? first one is solved for you. Answer in the comments below!\uD83D\uDE0F","✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment sectionon dev.to here. And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me. \uD83D\uDE09 Thank you all\uD83D\uDC4D","Follow me on GitHub for updates"]}],[{"l":"Doubts","p":["Ask any doubts related to Python basic course by starting a pull request on doubts.md in this repo.","You can also comment the posts on the dev.to platform or connect me via LinkedIn or Gmail.","![LinkedIn] 1","![Gmail] 2","Akways happy to solve your doubts\uD83D\uDE0E so feel free to send a fork."]}],[{"i":"learning-python--basic-course-day-1-introduction-and-installation","l":"Learning Python- Basic course: Day 1, Introduction and Installation","p":["*Download Python from here","A few conceptual exercises on this topic are provided here","Additional information for setting up Python can be found here.","Advantages of Python","After installing Python, you can use IDE's like PyCharm or any others.","Another alternative way of running Python is by searching IDLE (in win search-bar) according to the version you downloaded search \"IDLE (Python 3.9 64-bit)\"","Before we begin learning Python, we must set it up on our devices.","Developer Friendly Syntax- Python's syntax is easy to understand, unlike the cryptic C commands.","Disadvantages of Python","Easy to learn- Python is the easiest of all languages to learn.","Extensive collection of libraries Python has a huge volume of previously built in libraries which we can just plug and play!","For any suggestions or doubts, please comment below, and I will be happy to help :-) Happy Python programming!!","Free and Open source-Being open source, we can create our own modules in Python","guido-van-rossum-2","image","image*","Install Python with standered installation process. Try to avoid making any customization in it.","Introduction to Python Python is a general-purpose programming language. It is best suited for 'data' related applications like Data Mining, Machine learning and data extraction. But we can also use it for a variety of other purposes. Nowadays, any application, from websites to Mobile applications can be built using Python. You might be surprised to know that Python totally different from C++ or Java. Python doesnt have those spooky curly brackets. Gone! No trailing semicolons and no header files! Python code is designed to be as easy and simple as possible. Small code yet great results. Why, the hello world program in Python is just a one liner!","Multilanguage support-Python supports other languages like Java and C++","Object Oriented Programming support- Python has Strong OOP support, but unlike Java or C++, OOP is not a strict compulsion.","Opening IDLE/IDE","Originally published on dev.to here","Python can also be run on online web based interpreters like this one.","Python can also be run on the command prompt by typing the command\"py\"","Python is both a strongly typed and a dynamically typed language Variables are declared in run time and not in advanced, making it most dynamic and most flexible. (More about it here). However, this flexibility may confuse the programmer too!","Python is highly portable- Python is a device independent language. Like Java, It can be run on any device (Linux, windows, mac or any other) with the same code.","Python is interpreted and not compiled- Python interpreter highlights one error at a time. Whereas compiled languages like C's take the whole at code once. Interpreted languages are easier to Debug, though a bit lagged. More about it here.","Python is slower than C's- Due to being far from the hardware, some functionalities in Python make it slower than C. You can make other languages (like Python itself) using C/Java but Python can't go so fundamental. This is because it is designed for Data specific applications.","Python not close to the hardware- The device specific features which C's offer are not in Python. This is why it cannot be used in high precision applications.","So, next time you right Python code, dont' forget to thank Guido Van Rossum. This Dutch programmer invented the Python language. It was he who gave Python this unique and mysterious name.","Steps for setting up Python:","This opens up the Python IDLE","To be continued....","What's more, Python doesnt have data types! You can store an integer, string or character in the same variable! This is what makes Python a really mysterious language."]},{"i":"please-star-the-repo","l":"Please star the repo \uD83E\uDD29"}],[{"i":"learning-python--basic-course-day-2-statements-comments-and-indentation","l":"Learning Python- Basic course: Day 2, Statements, Comments and Indentation","p":["Originally published on the dev.to platform here"]},{"i":"hi-all-welcome-to-the-second-day-of-the-course-today-let-us-learn-about-some-python-syntax","l":"✌️Hi all! Welcome to the second day of the course! Today let us learn about some Python syntax.","p":["Assignments- The statements giving values to variables are called assignments.","Comments are an essential part of documentation. Proper documentation is a good programming habit. More about it [here]( https://dev.to/aatmaj/document-today-or-repent-tommorrow-1mg8).","Comments in Python- Comments in Python begin with a '#' These commands are ignored by the interpreter and used to make the program clearer for the developers.","Declarations- Functions, classes in python are declared by using the keyword \"def\". The function declaration must end with semicolon \":\"","Exercise----","Expressions- Statements which perform actions like addition, division, or any other such operations. Here are a few sample commands.","Here is another program which gives the value of net resistance in parallel","image","In order to prevent such errors, error handling must be dont, which will be covered in this course...","Indentation in Python- We need to leave spaces after every loops and function declarations. Brackets in Java are replaced by indentation in Python. If Indentation is not respected, this error is generated.","More about operators in Python will be in the next blog...","Moreover, every loop must end by a semicolon ':'","Note, that as we need to operate upon the numbers inputted, we have used the int() method. But if we input a character or string in place of the int, we will get the following error. image","Now, let us see a sample Python program-","Output-","So friends that's all for this part. \uD83D\uDE0A Hope you all are enjoying.\uD83D\uDE0E Please let me know in the comment section if you liked it or not. \uD83E\uDDD0 And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments here or gmail me. \uD83D\uDE09 Thank you for being so patient.\uD83D\uDC4D","Statements in Python Statements in Python are of three types","To be continued....\uD83D\uDE0F","Write a code in Python to find average of four numbers in one line, without declaring any variables.","Write a code to reverse a three digit number in Python.(Answers can be found here)"]},{"i":"please-star-the-repo","l":"Please star the repo \uD83E\uDD29"}],[{"i":"learning-python--basic-course-day-3-operators-and-if-elif-else","l":"Learning Python- Basic course: Day 3, Operators and If-elif-else","p":["Originally published on the dev.to platform here"]},{"i":"welcome-all-to-the-day-3-of-our-course-today-we-will-learn-about-operators-and-the-if-else-control-flow","l":"\uD83E\uDD1FWelcome all to the day 3 of our course. Today we will learn about operators and the if-else control flow.","p":["Operators in Python- image","Operators in Python are nearly the same that of other languages like C or Java.","There are, although a few differences as highlighted below-","The // operator is added in Python. This operator divides the number and rounds it down to the nearest integer.","The ** operator is the exponentiation operator, which raises the number to the power of a number.","The //= and **= assignment operators have also been added similarly. (For those unfamiliar with the assignment operators, x+=1 is equivalent to x=x+1 and so on for other signs)","Logical operators too exist in Python, but unlike symbols &,|,! in C, they are replaced by \"and\", \"or\", \"not\" in Python. This again makes it easier to read and comprehend","Bitwise operators are similer as C, though not used much. Membership and identity operators will be covered later along with lists.","if-else in python. The if else statement works as follows-The \"if\" condition is checked, if the condition unsatisfied, the actions in the indentation are skipped and if \"else\" succeeds the \"if\" condition, then the statements below \"else\" are executed if. Logic of the if-elif-else statement-","Unlike C, in Python we do not have to cover the conditions in any parentheses. However I personally feel that the brackets feel neat if added and prevent any confusion. The curly braces in C are replaced by indentation in Python. The \"elif\" in Python is same as else if in other languages.","Here is a sample program which checks if a number is positive, negative or zero.","Another sample program to find the number of digits of a number not more than 5 digits.","Execise- 1) There is a bug in the sample program for finding number of digits. Can you fix it? Answer 2) Modify Sample program 1 to print if a number is odd even along with positive and negative. Answer 3) Quadratic equation- values of a,b,c are entered by the user. Find any one root if exists, else print doesn't exist. Answer. This exercise will test the operators as well as the if-else.","To be continued....\uD83D\uDE0F","So friends that's all for this part. \uD83D\uDE0A Hope you all are enjoying.\uD83D\uDE0E Please let me know in the comment section if you liked it or not. \uD83E\uDDD0 And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me. \uD83D\uDE09 Thank you for being so patient.\uD83D\uDC4D"]},{"i":"please-star-the-repo","l":"Please star the repo \uD83E\uDD29"}],[{"i":"learning-python--basic-course-day-12-basic-algorithms","l":"Learning Python- Basic course: Day 12, Basic algorithms","p":["Originally published on the dev.to platform here"]},{"i":"today-let-us-explore-sequential-search-binary-search-and-bubble-sort-in-python","l":"Today let us explore Sequential search, Binary search and Bubble sort in Python.\uD83D\uDE80","p":["Today we will check out sequential search, binary search and bubble sort in Python lists. We will not go into the mathematical details of the complexity and all but just see how the algorithms are implemented. More complicated searching and sorting algorithms, complex data structures will be referenced and covered in the later parts. In case anyone among you are coming across these algorithms for the first time, please do google these terms out. I have also provided Geeksforgeeks references for further reading."]},{"l":"Sequential search","p":["The sequential search is the most easy and simple program for searching. We can just traverse through the list or use the inbuilt in method.","Output","Python provides a shortcut for searching as shown in method 2. This is a sequential search method for searching. It can search not only numbers, but characters or any other data types as well."]},{"l":"Binary search","p":["Binary search is another simple algorithm to search for numbers in a sorted list. In case you are new with Binary search, see GeeksForGeeks","Output-"]},{"l":"Bubble sort","p":["Bubble sort is a good sorting algorithm, and quite easy comparatively. more about it on GeeksForGeeks","Output-"]},{"l":"Exercises-","p":["& 2) In the samples above, the programs give no output if the item is not in the list. Modify the programs to include it. Answers - Sequential search, binary search","Write a program to bubble sort a list and then search using binary search. Answer","\uD83D\uDE0E Your suggestions motivate me, so please please please let me know in the comment section on dev.to if you this part or not.\uD83E\uDDD0 And don't forget to like the post if you did. \uD83D\uDE0D Follow me on github and star this repo"]}],[{"i":"learning-python-basic-course-day-5-summary-of-the-week-and-interview-questions","l":"Learning Python-Basic course: Day 5, Summary of the week and Interview questions","p":["Originally published on the dev.to platform here"]},{"i":"yo-today-is-the-day-five-of-our-course-the-agenda-for-today-is-solving-some-fantastic-questions-based-upon-our-learning-this-week","l":"Yo! \uD83E\uDD1F Today is the day five of our course \uD83D\uDC4B The agenda for today is solving some fantastic questions based upon our learning this week. \uD83D\uDC53","p":["1)Here is an easy one to begin with. Write a program to give the output like shown below-","A bit about the course I know, I am going a bit slow. May be too slow for some of you. But this is for the benifit of those who are here for the first time. The basic module of this course is made intentionally slow and elaborate. This week was a gentle intro to Python. In the coming weeks, I will cover all the details of the language. For those who already know coding basics, they can just skim through the blog and mull upon the exercises. The exercises provided will strengthen and reinforce the concepts. Moreover they are directly taken or similar to past coding tests from the interview panel...","Actual interview question- Write a program for this output-","Answer here","As above, the indention must be clear when dealing with large nested blocks","Day 1- We learnt what is Python, installed Python and wrote our very first hello world program. We also understood why Python is advantageous to other languages like C and Java.","Day 2- We learnt about Python statement types like assignments, expressions, declarations. We learnt how comments are written and the need of indentation. We then solved a few practice programs.","Day 3- We covered logical, relational, assignment and arithmetic operators, saw how they work. Then we understood the if-else syntax and solved a few problems on that.","Day 4- We learnt the For Loop in Python, how it differed from C, and solved some questions. (yes I admit they were boring)","Epilogue- We all know that neither me nor you have ever seen each other. Learning in remote environment is a difficult, and teaching is perhaps even more difficult. Teaching is never a one-way process. When a teacher teaches with pattern, he/she expects that the student must respond back. Either with doubts, remarks or nods of approval. But friends, being remote, we cannot interact with each other. The only way we can connect is through the comments on dev.to pplatform. So I urge everyone to comment on the posts. Currently I am in doubt whether you all are understanding me or not. Should I speed up the pace or maybe explain more clearly? I am not getting any feedback from you. Any doubts, discussions, remarks or even a simple hi from you is a great source of motivation for me. So I look forward to your comments below...\uD83D\uDE0A","Exercise","Explanation-As seen, there are two nested for loops. The second for loop has end variable i+1, where i is the running variable of the first loop. You must have noticed the end parameter in the print statement. By default, the python's print function ends with a newline. We can modify it by giving an additional parameter to the function using end. We can end the print parameter using any character using it. The last print at the end of the bracket is the representative for the newline.","For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways","Solution-","Summary of the week.","Thank you for being so patient.\uD83D\uDC4D","Today I am gonna give you few exciting questions to solve, and show you a few myself. In the flow we will also learn printing style and code-structure. A few questions from over here are actually from interviews and coding tests. (No exaggeration here)","User enters a character and a number. If the character is a vowel, then the the program's output is as given-","Write a program to check if numbers from 1-100 are prime or not"]},{"i":"please-star-the-repo","l":"Please star the repo \uD83E\uDD29"}],[{"i":"learning-python-basic-course-day-6-the-while-loop-and-more-questions","l":"Learning Python-Basic course: Day 6, The While Loop and more questions\uD83E\uDD13!","p":["Originally published on the dev.to platform here"]},{"i":"welcome-today-is-the-day-six-of-our-course-the-syllabus-for-today-is-learning-about-the-while-loop-and-solving-some-exciting-questions-like-gcd-lcm-and-the-collatz-conjecture","l":"\uD83E\uDD1FWELCOME \uD83D\uDC4D Today is the day six of our course! \uD83D\uDD25 The syllabus for today is learning about the while loop and solving some exciting questions like \uD83D\uDC49 GCD & LCM \uD83D\uDC8E and the Collatz Conjecture\uD83D\uDE03","p":["✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment section on dev.to. And don't forget to like the post on dev.to if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me. \uD83D\uDE09 Thank you all\uD83D\uDC4D","⭐Star this repo \uD83E\uDD29 and follow me for updates!\uD83D\uDE42 \uD83D\uDC4D \uD83D\uDCA5 \uD83D\uDE4F\uD83D\uDE4F\uD83D\uDE4F","3)Modify the prime number program we did in day 4 to replace for loop by while loop. Answer here","Answer here","BOOM!!!\uD83D\uDCA5 Be careful to terminate the program well while using the While loop. We can transform the Collatz code into a infinite loop and give a breaking condition as shown-","CODING CHALLENGE ⚔️ swap two letters in the above solution to give this output-","Exercise-","Here is a sample program in which the sum of numbers is shown by both methods, for loop and while loop-","Here is a sample program to find the GCD and LCM of two numbers--","Here is an example-","Here is another sample program of the Collatz conjuncture","In Python, one more thing is added known as while - else. With the else statement, we can run a block of code when the condition is false. This block is run only once. Syntax-","Infinite Loops-We can create infinite loops in Python using the while loop as shown","Mind the trailing commas... Answer here","More questions on the 'For' loop-","One thing to note here is the indentation. If we put else in same indent level as while, it will become a while-else type of statement and will give wrong results. Hence, always be careful in matching the else statements and the corresponding indents. It is useful many times to leave space equal to four spaces or one tab in between indents to avoid confusion and make the code clear.","The program below will make things clear.","The While Loop- The While Loop in Python shares a similer syntax like others. If the conditions are true, the loop is executed, else skipped over.","Unlike C, there is no do-while in Python. Neither is switch case.","Write a program to find the factors of a number using prime factorization. Answer here","Write a program to output the following","Write a program to reverse a number (any-digit). Answer here"]}],[{"i":"learning-python-basic-course-day-7-exercises-and-coding-challenges","l":"Learning Python-Basic course: Day 7, Exercises and coding challenges⚔️","p":["Originally published on the Dev.to platform here"]},{"i":"welcome-today-s-agenda-is-solving-more-interesting-questions-intricate-patterns-and-mind-blowing-sequences","l":"Welcome \uD83D\uDD90️ Today's agenda is solving more interesting questions! ❤️ intricate patterns and mind-blowing sequences ✨","p":["⭐Star this repo \uD83E\uDD29 and follow me for updates!\uD83D\uDE42 \uD83D\uDC4D \uD83D\uDCA5 \uD83D\uDE4F\uD83D\uDE4F\uD83D\uDE4F","Answer to this question will be given in Day 9. \uD83E\uDD1E So stay tuned by following me for updates \uD83D\uDC4D. Please like and comment on dev.to or fork the repo. \uD83D\uDE0A","Coding challenge-⚔️","Comment your answers below. Let's see who can solve tis one. \uD83D\uDDE1️\uD83D\uDEE1️ Beware, it is harder than it seems....\uD83D\uDE09","Exercises-","Let us now today solve some more questions \uD83D\uDE00 on while loops and for loops. \uD83D\uDE01 We will look at 2-3 sample questions followed by exercises and a coding challenge ⚔️.","Modify the factorial program we did in day 4 to error check for zero and negative numbers.(using if-else) Answer","OUTPUT-","Sample questions-","Simultaneous assignment of values Note the second last line. This is the Python syntax for simultaneous assignment. This is equivalent to using a temp variable like-","This python shortcut comes very very handy while swapping two numbers to","What such a small amount of code can do in seconds took us years to learn...\uD83E\uDD29","Write a program to display perfect numbers from a range entered by a user (include 0).","Write a program to display terms of this infinite pattern until 50.","Write a program to display times table from 1-10","Write a program to give the following output. Answer","Write a program to print Fibonacci numbers."]}],[{"i":"learning-python-basic-course-day-9-summary-of-the-week-and-exercises","l":"Learning Python-Basic course: Day 9, Summary of the week and exercises.","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-look-at-the-whole-weeks-summary-and-check-out-some-more-questions-the-solution-to-the-day-7-coding-challenge-is-also-provided","l":"Today, we will look at the whole week's summary and check out some more questions. The solution to the Day 7 coding challenge is also provided."},{"l":"Summary of the week-","p":["✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment section on dev.to.And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me. \uD83D\uDE09 Thank you all\uD83D\uDC4D","⭐Star this repo \uD83E\uDD29 and follow me for updates!\uD83D\uDE42 \uD83D\uDC4D \uD83D\uDCA5 \uD83D\uDE4F\uD83D\uDE4F\uD83D\uDE4F","\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25","Answer","Answer-","Day 6- We learnt about the while loop, while-else and solved questions","Day 7- We solved some more exciting questions on the for and while loop, and the coding challenge whose solution is presented today.","Day 8- We learnt about Unicode in Python and solved some questions.","Exercise-","For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways","Modify the password generator to include only keyboard characters (Unicode 33 to 126) OUTPUT-","Output-","Password generator. Write a sample program to input a number and output a 6 Unicode-character password. Divide the number by numbers 1-7 and generate characters using the result.","Sample questions-","Solution to the coding challenge.","Write a program to get 5 characters from user, take its Unicode sum and display the corresponding character for Unicode value. Answer","Write code to give the following output-","You can find the unicode chart here"]}],[{"i":"learning-python-basic-course-day-10-lists-in-python","l":"Learning Python-Basic course: Day 10, Lists in Python","p":["Originally published on the dev.to platform here."]},{"i":"welcome-this-week-is-for-data-structures-and-related-exercises-in-python-today-we-will-study-the-list-data-structure","l":"Welcome! \uD83E\uDD1F This week is for data structures and related exercises in Python . Today we will study the 'list' data structure. \uD83D\uDC8E"},{"l":"List","p":["A few things to note is that '1', 'b' and 'a' is of the data type character while 2 is of the data type int.list starts with 0. The first element of the list. There is no fourth index. Now if we try to acess the non-existant fourth element, an error will arise. Example as in this program","And don't forget to star this repo and follow me on GitHub!","Answer here","Dynamic allocation of lists","Exercise-","Here is another sample. Try to predict the output which it will give before looking at the cmd line output.","image","Inbuilt list methods. image","Length of a list in Python The length of a list can be calculated using the len() function It returns the number of elements in the list","Let us now see how to make a list. We can make a list using square brackets.","List is somewhat similar to arrays in Java. The common thing between lists and arrays is indexing part. Both are indexed in the same way. The differences in them arises in the data types. List is collection different data types, while arrays is a collection of same data types. Here is a technical defination- A list is a data structure in Python that is a mutable or changeable, ordered sequence of 'items'.- Every element in a list is indexes with umbers. Each element value in a list is called an 'item'. Moreover, a list is ordered, meaning the order of the element matters. There are inbuilt functions in Python which 'change' the list. but more about of that later..","OUTPUT","OUTPUT cmd-","OUTPUT-","So friends that's all for this part. \uD83D\uDE0A Hope you all are enjoying.\uD83D\uDE0E Please let me know in the comment section on dev.to if you liked it or not. \uD83E\uDDD0 And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments or Gmail me. \uD83D\uDE09 Thank you for being so patient.\uD83D\uDC4D","The reverse method just reverse the order of the list.","We can acess the entire list from the for loop","We can also directly print the entire lost using print()","We can print multiple values using the slicing operator","We will learn the methods using the example below","While popping or removing, make sure not to exceed the length of the list. OUTPUT-","Write a program for the following output-"]}],[{"i":"learning-python-basic-course-day-11-multidimensional-lists-and-tuples","l":"Learning Python-Basic course: Day 11, Multidimensional lists and Tuples","p":["Originally published on the dev.to platform here"]},{"i":"welcome-today-we-will-learn-multidimensional-lists-and-tuples","l":"Welcome! \uD83E\uDD1F Today we will learn Multidimensional lists and Tuples\uD83D\uDC8E"},{"l":"Multidimensional lists","p":["Multidimensional lists or fondly called list of lists can be made using the following syntax","This creates a 3 by 3 list. However, in the memory, the values are stored sequentially. Let us now see a sample to get things clear","The last statement is the mysterious way python implements it's syntax. Rather than writing in range, we can easily take this shortcut.","We can create multidimensional lists dynamically. Here is a sample showing how to.","Output-"]},{"l":"Tuples in Python","p":["Tuples are used to store multiple items in a single variable. A tuple is a collection which is ordered and unchangeable.","In other words the basic difference between list and tuple is that list is mutable, while tuple is not. No one can't modify tuple later. Tuple is a predefined (fixed) list. In similar way, we can make tuples of tuples or tuples of lists too!","Here is a sample","Exercise- Let a be a matrix as shown-","Write code for the following output-","Print a","Print the transpose of a-","Print lower diagonal elements of a","Print the top left diagonal","✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment section on dev.to. And don't forget to like the post on dev.to if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments or gmail me. \uD83D\uDE09 Thank you all\uD83D\uDC4D","Please follow me on Github and star the repo\uD83D\uDE0A"]}],[{"i":"learning-python-basic-course-day-14-basic-exception-and-error-handling-using-try-except","l":"Learning Python-Basic course: Day 14, Basic Exception and error handling using try-except","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-cover-exception-handling-in-python-by-using-the-try-and-except-statements","l":"Today we will cover exception handling in Python by using the try and except statements.","p":["The try statement is used to prevent errors while coding. You might try to pop from an empty list, process user input character as an int or divide by zero, this statement has got you covered!.","The try& except statements provide a robust alternative for the if-else statement. But this comes at the cost of a little more difficulty while debugging, when unexpected errors are not displayed. This is somewhat similar too the throw catch statements in C.","Here is a program which error checks if the user enters a number or not.","OUTPUT-","According to the python documentation here, there are three types of errors as shown-","We can specify multiple error handling as shown-"]},{"l":"Pass statement","p":["The except statement is compulsory, means that even if you do not want anything to happen if there is an exception, you still have to write it. Here is where the pass statement comes into play. The pass statement is basically a 'no-operation' statement in Python."]},{"l":"Exercise","p":["Solve the exercise 2 of the day 13 using the try except. Answer","✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment section on dev.to. And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me or fork this file\uD83D\uDE09 Thank you all\uD83D\uDC4D","Don't forget to star this repo too!"]}],[{"i":"learning-python-basic-course-day-15-more-about-try-except","l":"Learning Python-Basic course: Day 15, More about try-except","p":["Originlly published on the dev.to pletform here."]},{"i":"today-we-will-do-some-practice-related-to-the-try-error-handling-we-learnt-yesterday","l":"Today we will do some practice related to the try error handling we learnt yesterday.","p":["Sample program-","Tuple or List? Remember we covered basics of tuples on Day 11? Now we write a program to check if a data type is a List or a Tuple.","This example needs strong understanding of Tuples and multidimensional Lists, so in case you are not comfortable with either of them, please refer to Day 11","Output-","The logic behind this code is that when we try operations like pop, append, push etc. on tuples, they generate errors. We exploit this non-mutable property of Tuples to distinguish between the two. If error generated, it is a Tuple else a List."]},{"l":"Nested try except","p":["We can generate a nested try except in a similar manner, however there is a glitch","Here, statement 2 won't ever run. Can you think why?","This is because the first try will not give any error. This is because any no error will be given by the nested try except pass","Here is when we need a nested try is useful."]},{"l":"Exercise-","p":["Write a program to check if a number if less than, greater than or equal to 15 without using if -else. (hint use chr() along with try) Do-Not-See-This-Answer","Comment your answers on the dev.to platform here. Let's see who can solve this one. \uD83D\uDDE1️\uD83D\uDEE1️ Beware, it is harder than it seems....\uD83D\uDE09"]}],[{"i":"learning-python-basic-course-day-16-fractal-lists-and-other-questions","l":"Learning Python-Basic course: Day 16, Fractal lists and other questions","p":["Originally published on the dev.to platform here"]},{"i":"welcome-today-let-us-look-at-a-few-miscellaneous-questions-related-to-multidimensional-list-which-use-try-except","l":"\uD83E\uDD1FWELCOME \uD83D\uDC4D Today let us look at a few miscellaneous questions related to multidimensional list which use try-except\uD83D\uDE03","p":["In case you haven't visited yesterday's blog, please do so. We have covered some really good questions based upon try-except","Alphabetical order of letters.","Output-","Note- The inbuilt sorted() method is so nice, that it will directly sort the values in alphabetical order even if we do not convert them into integers! Try removing the chr() and ord() functions and running the code.","Till now we hadn't handled errors for the input. However in this example, we handle errors for input values, example we can prevent errors f the user inputs more than one character. Output-","Fractal lists. We will now try to generate a fractal list. Fractal list is a multi- multidimensional list looks something like this-[1, 2, [1, 2], [1, 2, [1, 2]], [1, 2, [1, 2], [1, 2, [1, 2]]]] Got the pattern? Basically we must append the list into itself. So now let us try doing so...","Well, that didn't work. This is because the python syntax doesn't allow us to append to a list like this. We must use a temp variable to store the value.","Output","Didn't work either! This is because when we assign temp=a and append temp,, then we are doing the same thing as before! The solution is using the copy() method."]},{"l":"Exercise","p":["1)- Write a program to find the length of the list in the fractal list. Answer","Write a program to reverse the lists in a list. Example","Hint- use try except pass for non list values.","Answer","✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment section on dev.to\uD83D\uDC47. And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me. \uD83D\uDE09 Thank you all\uD83D\uDC4D Star the Learning-Python repo made for this course!\uD83D\uDE03","\uD83E\uDD2Bpsst... follow me on dev.to and GitHub for updates..."]}],[{"i":"learning-python-basic-course-day-17-summary-of-the-week-and-insertion-sort","l":"Learning Python-Basic course: Day 17, Summary of the week and Insertion sort","p":["Originallly published on the dev.to platform here"]},{"i":"today-we-will-learn-about-the-insertion-sort-code-then-write-a-program-to-change-capital-and-small-cases","l":"\uD83E\uDD1FToday we will learn about the insertion sort code, then write a program to change capital and small cases."},{"l":"Summary of the week","p":["Day 14- we covered the try catch statements, and basic exception handling. Advanced exception handling and types of exceptions, user defined exceptions is for later.","Day 15- We solved some creative questions based on try catch and learnt about nesting them. We also saw one really challenging question related to try except here.","Day 16 We solved more questions on lists now with the added power of try except. We covered questions like fractal lists, alphabetical order of lists and reversing lists."]},{"i":"insertion-sort","l":"Insertion sort.","p":["Insertion sort is a simple sorting algorithm. It works similar to the way you sort cards. If you are new to this algorithm, check out this link.","Output-","The code enclosed in block comments ''' is block comments. Whenever working in teams, such documentation is of critical. More about it here.","For those who are new to Data structures and algorithms, please check out this course on dev.to.- Data structure & algorithms Series' Articles","Exercise","We did the alphabetical ordering yesterday(In case you missed it- here) Replace the sorted() method used in it with insertion sort. Answer here","Sample question","Capital to Small Write a program to turn capital letters into small case and small case to capital case in a list.","This is an example of error handling using if-else statements.","✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment section on dev.to. And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me. \uD83D\uDE09 Thank you all\uD83D\uDC4D","One more way to ask any doubts is by forking the repo here and sending Pull request of your doubt.","For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways","\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25 Next day will begin from Tuesday\uD83D\uDCC5, Monday is reserved for.... MATLAB MONDAYS\uD83D\uDCA5"]},{"i":"follow-me-for-updates-on-github","l":"Follow me for updates on Github."}],[{"i":"learning-python-basic-course-day-20-hashtables-via-dictionaries","l":"Learning Python-Basic course: Day 20, HashTables via Dictionaries","p":["Originally published on the dev.to platform here"]},{"l":"Hashtables and information retrieval","p":["The central theme behind hash tables is smart information storage and retrieval. The data must be stored in such a manner that it becomes very easy to search it.","Suppose we want to store a data of any thousand numbers ranging from one to a million. Using hashtables, we can efficiently store these numbers in a way which makes it easy for searching. This is possible only if we map the values to 'keys' The idea of hash table is to allow different possibilities of keys that might over to be mapped to the same location in an array. This is done with the help of 'hashfunctions' The hash function takes in a value and maps it to a key.","Example we might take the hash function as taking only the last three digits of the number. So, 45367 will go to the position 367, while 3769 will go to 769. In case of two numbers have same set of last three digits, we can use different algorithms to resolve collision. One way to do that is using 'chained hashtables' or linked hash tables. In this, lists are present in the hashtables instead of numeric values, where the values can be appended. The example below will make things more clear.","In case you are not familiar with hashtables, please visit the following references-","Dev.to","Geeks For Geeks","Hacker Earth","Youtube","Java point","Programitz","Tutorials Point","Wikipedia","If anyone has more references, then please comment below\uD83D\uDC47"]},{"l":"Simple hashtable","p":["Let us now see how to make a simple hashtable from using a dictionary. The user enters say five values, and we map them to a table of length ten. If the values of the keys overlap, then error message is generated and new value is ignored. This collisionj management will be handled by the next version of hashtable, i.e. linked hashtables.","For this program, we use a simple hashfunction given be the modulus operator as - key = value % length","OUTPUT-","Exercise 1)-Modify the above code to map Unicode characters to the hashtable."]},{"i":"linked-hashtable","l":"Linked hashtable.","p":["We now create a linked hashtable, i.e. hashtable of lists. This way, we solve the issue of the keys in the same position. If there are multiple values for the same list, then the values are appended on a list rather than ignoring them. This method is used for fast data retrieval"]},{"l":"Retrieving data from the hashtable","p":["We can retrieve the data from the hashtable very efficiently. In the same way as we added the data, we now will remove and display it.","Answers as usual in this learning python repository","Hashtables are one of the many many data structures present. For more information related to data structures and algorithms, please visit this series of blogs- Data structures blog series by Aya Bouchiha on Dev.to","✌️So friends that's all for now.","Follow me on GitHub for updates"]}],[{"i":"learning-python-basic-course-day-21-summary-of-the-week-and-dictionary-exercises","l":"Learning Python-Basic course: Day 21, Summary of the week and dictionary exercises.","p":["Originally published on the Dev.to platform here"]},{"i":"today-we-will-do-more-questions-related-to-dictionaries-for-a-thorough-revision-in-the-process-we-also-will-learn-a-few-methods-related-to-dictionaries","l":"Today we will do more questions related to dictionaries for a thorough revision. In the process, we also will learn a few methods related to dictionaries.","p":["Summary of the week-","Day 18 We learnt about dictionaries. We checked out one example which covered many inbuilt functions related to dictionaries.","Day 19 We practiced a few questions on dictionaries and had quite a thorough practice of dictionaries in Python. We did programs to fuse two separate lists to a single dictionary, paired out even numbers and made fancy dictionaries using for loops.","Day 20 We learnt about hashtables and how to create them using dictionaries. We tried out simple and chained hashtables and worked out information retrieval using them."]},{"i":"sample-question-concatenate-two-dictionaries","l":"Sample question-Concatenate two dictionaries.","p":["We will now fuse two dictionaries to create a new one using the update() method","output-","Conflict resolution- In case both the dictionaries have a same key, in that case the last value is held true by the update() method."]},{"i":"editing-keys","l":"Editing keys.","p":["I know what you all must be thinking. Keys are non-mutable right? Yes. they are. but here is a cleaver trick","Today there are no exercises from my side..\uD83D\uDE03...But wait!\uD83D\uDE12 I am providing a reference link for taking on a dictionary quiz to clear all your concepts!\uD83D\uDE0B Dictionary quiz by PYnative The quiz contains 14 Questions. 14/14 is the target","Comment your progress below by pasting screenshot of your scores!\uD83E\uDD20","✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment section on dev.to. And don't forget to like the post there if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me. \uD83D\uDE09"]},{"i":"please-do-follow-me-on-github-and-star-this-learning-python-repository-which-contains-all-the-material-for-this-course","l":"Please do follow me on Github and Star this Learning Python Repository which contains all the material for this course\uD83D\uDE01","p":["Thank you all\uD83D\uDC4D","For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways"]}],[{"i":"learning-python-basic-course-day-22-string-methods-part-1","l":"Learning Python-Basic course: Day 22, String Methods Part-1","p":["Originally published on the dev.to platform here"]},{"l":"Today we will learn about string functions","p":["Till now, we were using strings for various programs. We used them both as input and output parameters. But now we will learn how to modify them. This week, we will do operations like break a sentence into words, break strings into letters, capitalize them without using the ord() hack or count number of vowels in a sentence."]},{"l":"String as a list","p":["In Python, we can easily interpret a string as a list of characters. In the example below, we can apply the len() function to the string txt, or iterate the for loop. But we cannot treat it as a list and do opertions like pop or append()","OUTPUT-"]},{"l":"Case changing","p":["We will now see how to handel upper and small cases in Python without any direct use of UNICODE characters.","OUTPUT-"]},{"l":"Word specific methods","p":["Now let's have a look at more string functions via a program. Comments are there whenever necessary.","OUTPUT-"]},{"l":"Exercises","p":["1)- Write a program to change the capitalization of a user input string and add full stop at the end if it isn't present.","2)- Write a program to give the following output-"]}],[{"i":"learning-python-basic-course-day-23-string-methods-part-2","l":"Learning Python-Basic course: Day 23, String Methods Part-2","p":["Originally published on the dev.to platform here"]},{"i":"today-we-cover-more-about-string-functions","l":"Today we cover more about string functions.","p":["String functions are inbuilt methods to modify and change strings. In case you missed yesterday's part, click here."]},{"i":"string-functions-for-gui","l":"String functions for GUI.","p":["isalpha()- to check if all characters are alphabets.","isalnum()- to check if all characters are alphanumeric.","isdigit()- to check if all characters are digits.","islower()- to check if all characters are lower case.","isspace()- to check if all characters are blank spaces.","istitle()- to check if all characters follow title rules.","isupper()-to check if all characters are upper case.","The methods above are useful especially when we deal with GUI. For example, when we want the users to enter only alphanumeric values for passwords, alphabets for names and only digits for pin-codes These are useful to prevent errors in complex operations like OOP, GUI or file reading which we will cover in the next module.","Output-"]},{"l":"Exercise-","p":["Write a program to check if a string is alphabetic, numeric or alphanumeric or none.. answer in the Learning Python repo","So friends that's all for this part. \uD83D\uDE0A Hope you all are enjoying.\uD83D\uDE0E Please let me know in the comment section on dev.to if you liked it or not.\uD83E\uDDD0 And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments on dev.to or gmail me. \uD83D\uDE09 Thank you for being so patient.\uD83D\uDC4D"]}],[{"i":"learning-python-basic-course-day-24-string-methods-part-3","l":"Learning Python-Basic course: Day 24, String Methods Part-3","p":["Originally published on the dev.t platform here"]},{"i":"today-we-will-finally-finish-up-with-string-methods-in-case-you-missed-the-previous-part-1-and-part-2-of-string-methods-then-you-can-check-them-out","l":"Today we will finally finish up with string methods. In case you missed the previous part 1 and part 2 of string methods, then you can check them out.","p":["String manipulation in Python can be implemented in a very easy way with the use of inbuilt, methods. This comes very handy when we need to manipulate strings while working with complex operations. For example, this saves a lot of code while working with 'front-endish' applications like GUI. Let's say we are writing a password management system and want to check if only alphanumeric vakyes are present. In such cases, the inbuilt functions save code wile compared to long nested for loops.","Another feature of string slicing can be very handy and save a lot of code, say when you want to reverse strings or take only a part of whole sentences.","In this part, I am presenting only sample programs, as the methods do not require much explaination and code is commented wherever necessary."]},{"l":"Trimming Strings","p":["We will now use inbuilt functions to trim strings into parts.","output-"]},{"l":"Stripping Strings","p":["OUTPUT"]},{"l":"Slicing Strings","p":["OUTPUT"]},{"l":"Reversing of strings","p":["OUTPUT","So friends that's all for this part. \uD83D\uDE0A Hope you all are enjoying.\uD83D\uDE0E Please let me know in the comment section on dev.to if you liked it or not. \uD83E\uDDD0 And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments there or gmail me. \uD83D\uDE09 Thank you for being so patient.\uD83D\uDC4D"]}],[{"i":"learning-python-basic-course-day-25-summary-of-the-basic-course","l":"Learning Python-Basic course: Day 25, Summary of the basic course.","p":["Day 1 We learnt what is Python, installed Python and wrote our very first hello world program. We also understood why Python is advantageous to other languages like C and Java.","Day 10 We learnt about lists in Python, and various list functions like popping, appending, copying and much more. We then used these functions for creating a program for dynamic generation of lists.","Day 11 We learnt about multidimensional lists, dynamic generation of multidimensional lists and had an introduction to tuples. We learnt that tuples were non mutable lists which cannot be changed or altered in anyway after they are hardcoded.","Day 12 We used lists to make algorithms like bubble sorting, binary searching and sequential searching.","Day 13 We learnt how to implement stack in Python and summarized the week. Stacks and queues can be easily implemented in Python using lists and some cleaver use of it's inbuilt functions.","Day 14 we covered the try catch statements, and basic exception handling. Advanced exception handling and types of exceptions, user defined exceptions is for later.","Day 15 We solved some creative questions based on try catch and learnt about nesting them. We also saw one really challenging question related to try except here.","Day 16 We solved more questions on lists now with the added power of try except. We covered questions like fractal lists, alphabetical order of lists and reversing lists.","Day 17 We learnt how to implement insertion sort in Python.","Day 18 We learnt about dictionaries. We checked out one example which covered many inbuilt functions related to dictionaries.","Day 19 We practiced a few questions on dictionaries and had quite a thorough practice of dictionaries in Python. We did programs to fuse two separate lists to a single dictionary, paired out even numbers and made fancy dictionaries using for loops.","Day 2 We learnt about Python statement types like assignments, expressions, declarations. We learnt how comments are written and the need of indentation. We then solved a few practice programs.","Day 20 We learnt about hashtables and how to create them using dictionaries. We tried out simple and chained hashtables and worked out information retrieval using them.","Day 21 This lecture was devoted to solving exercises related to dictionaries.","Day 22 We covered string methods for effects like case changing, word manipulations, etc.","Day 23 We leant about the string methods which are required for GUI.","Day 24- We finished off with string functions","Day 3 We covered logical, relational, assignment and arithmetic operators, saw how they work. Then we understood the if-else syntax and solved a few problems on that.","Day 4 We learnt the For Loop in Python, how it differed from C, and solved some questions related to it.","Day 5 After quickly summarizing the week's learnings, we solved some questions which are asked in technical interviews.","Day 6 We learnt about the while loop, checked the meaning behind while-else and solved questions related to it.","Day 7 We solved some more exciting questions on the for and while loop, and an coding challenge.","Day 8 We learnt about Unicode in Python and solved questions. We learnt the use of ord() and chr() methods. the ord method returns the unicode of the charater while chr() returns the character.","Day 9 After summarizing the week's learnings, we practiced everything related to it.","Originally published on the dev.to platform here","Please visit the Learning Python Repository, which contains all the material for this course.","So friends today is the last lecture of the basic course and today we will just summarize whatever we learnt till now.","This marks the end of the Basic module of the Learning Python Course!","You all can ask me any doubts by forking this file and sending a pull request."]}],[{"l":"Intermediate"},{"i":"portion-for-the-second-intermediate-course-","l":"Portion for the second (Intermediate course)-","p":["User defined functions","Numeric and Mathematical Modules","GUI and design using Tkinter","File handling in Python","OOP techniques"]}],[{"i":"learning-python--intermediate-course-day-1-user-defined-functions","l":"Learning Python- Intermediate course: Day 1, User defined functions","p":["Originally published on the dev.to platform here"]},{"i":"welcome-all-to-the-first-part-of-the-intermediate-course-today-we-will-start-user-defined-functions","l":"Welcome all to the first part of the intermediate course! Today we will start user defined functions.","p":["In this part, we will cover only function which do not return any value, or as per C syntax 'void' functions."]},{"i":"what-are-user-defined-functions","l":"What are user defined functions?","p":["User-defined functions are functions that you use to organize your code in the body.","Let's say that we want to execute a part of the code many times throughout the program. If we type the same lines of code over and over, what will happen? Not only we will waste time in typing, but the overall code structure will be almost unreadable! Moreover what will happen if you want anytime to change the way the function works!","This is one of the many places where user defined functions come in handy. Once we tell the functions what to do, that is give them a piece of code to run, we are ready to go. We can then call them again and again with just a single line. Editing the function becomes simple and code looks compact and clean. They are an invaluable part of OOP in Python. User defined methods also allow us to use recursion, but more about that later."]},{"l":"Syntax of python functions","p":["In order to make functions, we first need to define them. this is done using the def keyword. Then we need to declare input parameters to the function. Finally we put a semicolon at the end. After that, we put the code to be run in an indent. This is done as shown-","Well, a practical example might be more useful-","OUTPUT-","In the above program, what we have done is we have declared a function named fun, and have given it three input parameters, namely a,b and c. Then in the function code, we have told to print the sum of a, b and c.","One thing to be noted is that the function must be declared before it is used. If we do not follow this rule, then the code will not run. For example-","Hence it is a good practice to declare all the functions before writing the main code."]},{"i":"sample-question-1--write-a-function-to-check-if-two-numbers-are-greater-than-less-than-or-equal-to-and-print-the-values","l":"Sample question 1- Write a function to check if two numbers are greater than, less than or equal to and print the values.","p":["OUTPUT-"]},{"i":"sample-question-2--write-function-to-print-the-product-of-all-the-elements-in-a-list","l":"Sample question 2- Write function to print the product of all the elements in a list.","p":["OUTPUT-"]},{"i":"exercise--what-changes-will-you-make-to-the-function-to-print-the-product-if-we-were-to-put-tuples-instead-of-lists-answer","l":"Exercise- What changes will you make to the Function to print the product if we were to put tuples instead of lists? Answer"}],[{"l":"Exercise 1","p":["NO CHANGES AT ALL! This is because Python doesn't care about type safety. In the function, whatever parameter you pass has only one condition, that is the code must be compatable with it. Here, the for loop was compatable with both- list as well as tuples. Hence if we pass any of them, it will not make any difference","OUTPUT-"]}],[{"i":"learning-python--intermediate-course-day-2-returning-values-from-methods","l":"Learning Python- Intermediate course: Day 2, returning values from methods.","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-learn-how-to-return-values-from-user-defined-functions","l":"Today we will learn how to return values from user defined functions.","p":["In the previous part, we covered user-defined functions which did not return any value. But today we will learn how to make functions that return Python data types. This means that now instead of just printing the values, we will now use them in our main code!"]},{"i":"returning-values","l":"Returning values.","p":["When we say return a value, it simply means- give the final result back to the part of code which called the function. The return statements can be only called from within a function. After the return statement is called, the function code terminates. This means that the statements after the return statement are not run! Here is the syntax"]},{"i":"sample-question---write-a-function-isodd-to-check-parity-of-numbers","l":"Sample question - Write a function isodd() to check parity of numbers.","p":["Run the code yourself and check for different values."]},{"i":"exercise-1--what-will-happen-if-the-else-statement-is-removed-in-the-above-code-answer","l":"Exercise 1- What will happen if the else statement is removed in the above code? Answer"},{"l":"Returning multiple values","p":["We cannot directly return multiple values in Python, but there are many hacks The best among them is returning a list of values."]},{"i":"sample-question-2--write-a-function-to-return-the-smallest-two-entries-from-a-given-list","l":"Sample question 2- Write a function to return the smallest two entries from a given list"},{"i":"exercise-2--write-a-function-to-reverse-a-string-answer","l":"Exercise 2- Write a function to reverse a string. Answer"}],[{"l":"Exercise 1","p":["No change at all! It will just make the code shorter by eliminating the else statament., with no change in the output or the way it works. This is because if the if statement runs, then the function code will terminate at the return statement and won't run the next lines. This is why the else statement is not required."]}],[{"i":"learning-python--intermediate-course-day-3-recursion-in-python","l":"Learning Python- Intermediate course: Day 3, Recursion in Python","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-study-recursion-in-python-make-recursive-functions-to-solve-problems-like-like-fibonacci-numbers-factorial-of-a-number-and-the-collatz-conjecture","l":"Today we will study recursion in Python, make recursive functions to solve problems like like Fibonacci numbers, factorial of a number and the Collatz conjecture.","p":["In the previous two parts, we have learnt how to make user-defined functions and make them return values. In case you have missed them, be sure to check them out too!\uD83D\uDE42"]},{"i":"what-is-recursion","l":"What is recursion?","p":["Recursion is a way of approaching problems which breaks apart complex concepts into smaller and smaller solvable steps.","Recursion is an invaluable programming tool. Recursion is an example of the programming principle- Divide and Rule. It is the method of solving a problem by dividing the original problem into two or more sub problems which are similar to the original problem but smaller in size. The subproblems are further divided and so on. Then, we combine the answers of the sub problems and get the answer to the original problem.","Recursion allows the programmer to concentrate on the key step of an algorithm without initially having to worry about coupling that step with all others.","Recursion is one of the most flexible and powerful tools to solve a complicated problem. When properly implemented, recursion is memory and time efficient. Errors like forgetting the return statement must be avoided, else your program will land in a boom!\uD83D\uDCA5","In case anyone is new with the concept of recursion, here are a few quick references","Recursion is not hard: a step-by-step walkthrough of this useful programming technique","A quick guide to Recursion by example.","Recursion for Coding Interviews: The Ultimate Guide"]},{"i":"sample-question-1--write-a-recursive-version-of-the-collatz-conjecture-","l":"Sample question 1- Write a recursive version of the collatz conjecture-","p":["A common computer programming tactic is to divide a problem into sub-problems of the same type as the original, solve those sub-problems, and combine the results. This is often referred to as the divide-and-conquer method; when combined with a lookup table that stores the results of previously solved sub-problems (to avoid solving them repeatedly and incurring extra computation time), it can be referred to as dynamic programming or memoization. - Wikipedia"]},{"i":"write-a-program-to-find-the-nth-fibonacci-number-recursively","l":"Write a program to find the n'th Fibonacci number recursively."},{"l":"Exercises","p":["Write the recursive function for factorial of a number.","Write a program to give the following output without using the for loop","That's all for today. Tomorrow we will check out some more recursive functions and learn the Guidelines of Recursion.✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨"]}],[{"l":"Exercise solutions","p":["The answeers displayed over here are just one way of solving the problems. You may have other, perhaps more elegant ways of approaching the same problems, so do not worry if your code doesn't match the structure given here. Just the outputs must be the same\uD83D\uDE03"]}],[{"i":"learning-python--intermediate-course-day-23-intvar-and-radio-buttons","l":"Learning Python- Intermediate course: Day 23, IntVar() and Radio-buttons.","p":["Originally published on the dev.to platform here"]},{"l":"We will study radio-buttons in Tkinter in this part","p":["Today we will create another simple program. The layout will consist of one label and four radio-buttons. The user has to choose any one of the four buttons and choose the favorite programming language.","image"]},{"i":"intvar","l":"Intvar()","p":["Before we start coding the program, we need to understand what is 'Intvar'. Yesterday we saw that Boolean values are not directly supported in Tkinter. We had originally written a function with Boolean values, but then had to replace it. We had to use something called as 'BooleanVar()'. But what exactly was it? Let's understand in depth today......","Tkinter widgets (like buttons) take input from the user. This input must be processed by the program. In order to do so, they need to 'store' the data into variables, which can be accessed by other functions in the program. But the problem with Tkinter is that Tkinter doesn't support our usual primitive data types. It's not possible to hand over a regular Python variable to a widget as a variable. So what do we do? We pass an object which does this work. These objects act as variables. The only difference is that you need to use the get() and set() methods for operating on them. To read the value of the variable, use get(). To put the value into the variable, use set()","There are four types of such Tkinter variable objects-","The command prompt example below will make things clear.","Hope things are clearer now. Once we cover object oriented programming, we too will be creating objects like intvar and many more."]},{"i":"exercise--what-went-wrong-in-the-example-below","l":"Exercise- What went wrong in the example below???","p":["Answer"]},{"i":"the-final-program","l":"The final program.","p":["The final program is very easy to understand, now that we have covered Intvar(). Majority of the steps are the same as yesterday, with radio-buttons replacing checkboxes. So please study the program carefully and master Tkinter Radio-buttons. Comments are put wherever required."]},{"i":"default-value-is-not-present","l":"Default value is not present.","p":["image","If you wanted to have any default value, the you need to set v to 0 (for 'Python'.., etc) while initializing, and run the showchoice() function once. If you do not run the showchoice() function, then Python will be selected default but the label won't show the value."]},{"i":"choosing-only-one-among-all","l":"Choosing only one among all....","p":["image"]}],[{"l":"Exercise 1","p":["Due to automatic type conversion in Python. Type conversion takes place between integer and intvar.","a=IntVar() a is of type IntVar() a=1 a is now of type integer. (automatic type conversion of Python a.set(1) But now int has no attribute set()! Traceback (most recent call last): File stdin, line 1, in module AttributeError: 'int' object has no attribute 'set'"]}],[{"l":"Exercise","p":["What is wrong in the example below?"]}],[{"i":"learning-python--intermediate-course-day-30-spinbox-and-labelbox","l":"Learning Python- Intermediate course: Day 30, Spinbox and Labelbox","p":["Originally published on the dev.to platform here"]},{"i":"in-this-part-let-us-see-how-to-use-the-spinbox-and-listbox-widgets-widget","l":"In this part let us see how to use the spinbox and listbox widgets widget."},{"i":"spin-box-widget","l":"Spin box widget.","p":["The spinbox widget is a type of widget which lets the users choose values in an easy way. The user can navigate through the values using the up and down arrows. You can read more about it here"]},{"l":"Making the spinbox widget","p":["The spinbox widget is very similar to the slider widget we learnt in the last part. v all we need to do is replace slider by spinbox","image","Here we get the value from the spinbox in the same manner as we did for slider widget, that is, by using the get() method."]},{"l":"Listbox widget","p":["The listbox widget also allows the users to choose values from a given set of string or numerical values. These value sets are determined by the program.","The Listbox widget is used to display a list of items from which a user can select a number of items."]},{"l":"Making a listbox widget","p":["Lb = Listbox(frame) creates a listbox widget. We can add values to the widget using the insert() method. Here is an example which creates a Listbox"]},{"i":"getting-the-value-from-the-listbox","l":"Getting the value from the listbox.","p":["We can get the value using the curselection() method. The curselection returns the position of the selected item.","image","In order to get the value, we can use listbox method get() to return the tuple of values and index the position. showbutton.config(text=Lb.get(Lb.curselection())) But instead it will be more flexible if we make a tuple of those values themselves and feed them into the program. moreover using a for loop to feed in values enhances flexibility and extensibility.","Exercise-","Should item be a tuple or a list??","What will happen if we remove [0] in items[Lb.curselection()[0]]?","Use Lb.get(Lb.curselection()) and rewrite the entire program","The above program, lot of lines are wasted. use the height attribute to adjust the number of lines.","Does the height attribute take in the number of lines or pixel space? Try to find out using trial and error methods.","When you set the height, did you feel the usefulness of flexibility initializing a tuple and setting the values?","Answer in the comments below. Answers will be found in the Learning Python Repository"]},{"l":"Types of selections","p":["In the listbox object, there is a attribute called as selectmode. By using this attribute, we can set how we want to select the items.","Selectmode determines how many items can be selected, and how mouse drags affect the selection −","BROWSE − Normally, you can only select one line out of a listbox. If you click on an item and then drag to a different line, the selection will follow the mouse. This is the default.","SINGLE − You can only select one line, and you can't drag the mouse. Wherever you click button 1, that line is selected.","MULTIPLE − You can select any number of lines at once. Clicking on any line toggles whether or not it is selected.","EXTENDED − You can select any adjacent group of lines at once by clicking on the first line and dragging to the last line.","image","image In the extended mode, you cannot choose two non-continues values at once. Example, you cannot choose only Haskell and Julia in the above program.","For displaying the contents we will require a better method, like for example textbox. We will need to extract out all values out from the tuple, or convert it out into a string before displaying it."]}],[{"l":"Exercise 1","p":["items should be a tuple when the list is final. This will prevent other programmers and their code from editing your set of values","items should be a list when you want to it to be extendable and flexible. This will enable other programmers to change, add or delete the values from the set of items."]}],[{"l":"Exercise 2","p":["Lb.curselection() returns a tuple of values. This is why Lb.curselection()[0] is used as it returns only the first value. In the above program, we wanted only the first value to be selected, hence we used the [0] syntax.","Not doing so will give the error below-"]}],[{"l":"Exercise 5","p":["Lines and not pixel values. image"]}],[{"l":"Exercise 6","p":["Yes. by using len(item) instead of 6, we caan make the program immune to change. This means that even if the items needs to be changes either in the code or dynamically, we do not need to change the value of the height parameter each time. This flexibility goes a long way in making the program more extensible."]}],[{"i":"learning-python--intermediate-course-day-38-oop","l":"Learning Python- Intermediate course: Day 38, OOP","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-learn-about-oop-in-python-today-we-will-make-a-simple-class-and-use-instances-of-the-classes","l":"Today we will learn about OOP in Python. Today we will make a simple class and use instances of the classes.","p":["Almost everything in Python is an Object, with its properties and methods. A class is like an object blueprint for creating objects. To create a class, use the keyword class:","Here is an example of a sample class commented wherever required","Let us see one more sample"]},{"l":"Class methods","p":["We can put functions inside a class, which are called as 'methods' Syntax","The below example will make things very clear","In the method, one of the arguments passed was the class itself. This is necessary syntax in Python. If it is not done in the same manner, the program won't run. Below are code snippets of how a program won't run.","Common mistakes","Didnt use the dot operator in the method syntax","Forgot to mention the classname in the arguments"]},{"i":"tired-of-writing-the-name-of-the-class-every-time-well-use-the-self-keyword","l":"Tired of writing the name of the class every time? Well use the self keyword","p":["The self keyword can be used in place of the entire class name","Even replacing the class name by self inside the method works"]},{"l":"Returning values","p":["We can make the methods return value as we would do in the usual methods","Let us take one more example related to the methods.","Here, set_amount(self) is a setter method, i.e. This methods sets the values of the method object."]},{"l":"Exercise","p":["What will happen if we replace self.set_amount(amount) by self.set_amount(self,amount) ?","Write a program which contains a class student which contains variables Id, name and roll number The class must have methods showId and showrollnumber()"]},{"l":"Private methods","p":["We will now see how to make class methods as private. The private methods can only be accessed from inside the class. No one outside can access it. In the above example, the set_amount is used only inside the class. So why not mark it private? We can set private methods in Python by adding two underscores to the class name, like this __set_amount Rest all remains the same","This private method can not be accessed outside of the class","So friends that was all for this part. In the next part we will study the __init__ or the class constructor.","Thank you"]}],[{"l":"Exercise 1","p":["The following error will be generated-","Thumb rule -> inside of another function, use a function like you would outside the class."]}],[{"i":"learning-python--intermediate-course-day-44-summary-of-the-week-examples-and-exercises","l":"Learning Python- Intermediate course: Day 44, Summary of the week, examples and exercises","p":["Originally published on the dev.to platform here"]},{"l":"Today we will have a quick summary of the week","p":["Let us see a sample OOP program"]},{"l":"Exercises-"},{"i":"1-correct-the-following-code","l":"1) Correct the following code"},{"i":"2-correct-the-following-code","l":"2) Correct the following code"},{"i":"3-extend-the-above-program-to-include-a-class-tiger-and-class-wild-add-attribute-habitat-to-wild-and-pet-use-iterable-for-in-loop-to-call-out-the-methods-hint-use-try-except","l":"3) Extend the above program to include a class tiger and class wild. Add attribute habitat to wild and pet. Use iterable for in loop to call out the methods (hint use try except)"},{"l":"Day 41","p":["We learnt about inheritance in Python Inheritance is an OOP concept which provides flexibility and code reusability to the program. We can make changes to the program without altering much code. We can also extend the code by adding new functionality without much effort. Inheritance in Python is achieved by adding the name of the super classes inside the constructor of the new class. In this part we studied how functions and properties are inherited from the super class. But object constructors are not inherited by the subclasses, however the number of arguments for constructors must be the same for both if the classes. Functions are overloaded in the subclasses, that is the functions with same name can be present in both the subclass and the super class. In such cases, the functions of the sub-class are considered as effective. Constructors and methods of the superclass can be called by the super() method in case of overloading."]},{"l":"Day 42","p":["In this part we learnt about polymorphism, yet another OOP feature. Just like inheritance, polymorphism too does help in making the program more extendable and flexible. Using polymorphism, we can create new subclasses without doing much change into the superclass. Polymorphism is a technique by which subclasses can be considered as types of super-classes. Polymorphism in Python is achieved through overwriting of methods."]},{"l":"Day 43","p":["In this part we covered some more of OOP. We covered concepts which are not directly supported by Python, like abstraction and interfaces. We saw a brief about duck typing and how to resolve the Deadly Diamond of Death. This part was just intended to bring together a feeling of completeness regarding OOP concepts and not a complete guide towards OOP."]},{"i":"intermediate-part-of-the-course-ends-today","l":"Intermediate part of the course ends today.","p":["So friends, this marks the end of the Learning Python intermediate course. I will be soon providing you all with the summary of the intermediate course."]}],[{"l":"Exercise 1","p":["You cannot call the function my the class name, you need to uise the name of the instance.","sample.fun() Should have been mysample.fun()"]}],[{"l":"Exercise 2","p":["You need to write 'self' in the arguments for functions.","def fun(): should be def fun(self):"]}],[{"i":"learning-python--intermediate-course-day-4-summary-of-the-week-guidelines-for-recursion-and-high-level-questions","l":"Learning Python- Intermediate course: Day 4, Summary of the week, Guidelines for Recursion and high-level questions.","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-study-principles-of-recursion-and-then-solve-questions-related-to-recursion-this-is-the-continuation-of-the-last-part-so-in-case-you-have-missed-that-one-make-sure-to-have-a-quick-check-here","l":"Today we will study principles of recursion and then solve questions related to recursion. This is the continuation of the last part, so in case you have missed that one, make sure to have a quick check here"},{"l":"Summary of the week-","p":["Day 1 We learnt how to make user defined functions. User defined functions are custom functions designed by the programmer. They provide code reusability and flexibility while solving complicated problems. All this was backed up with two sample questions and one conceptual exercise.","Day 2 We learnt how to return values from functions. By breaking complicated operations into functions, we can make the code more compact and flexible. This is possible because we can return data-types back to the function call. Returning multiple values is invalid, but we can return a list which can hold the values.","Day 3 We studied recursion in Python. We implemented it by calling the function from inside it. We then solved some good questions related to recursion."]},{"i":"guidelines-for-using-recursion","l":"Guidelines for using recursion.","p":["Recursion is a tool to allow programmer to concentrate on the key step of an algorithm, without initially having to worry about how to couple that step with the others.","Recursion is basically breaking apart a problem into parts, solving a single part and the while problem gets solved magically.","Consider an example. We want to find the shortest path to a city. So first, we find shortest paths to all it's neighboring cities, and then choose the route which is smallest. And how do we find the shortest path to the neighboring cities? Well in the same way! This is the beauty of recursion. We can address a complicated problem by making smaller replicas to the main problem on and forever! This is known as the travelling salesman problem, which we solved using recursion.","We first start any problem by asking \"How can this problem be divided into parts?\" Once we have a simple short step to solve a mini-problem of the same type, applying it to a larger problem is easy.","Finally we need to decide a stopping rule to prevent the recursion from running indefinitely. For example in the above problem, we stop when we reach to the city from where we have to start."]},{"l":"Exercises","p":["The Greatest Common Divisor(GCD) of two positive integers is the largest integer that divides both of the two integers. Thus, the GCD of 8 and 12 is 4, the GCD of 9 and 18 is 9, and the GCD of 16 and 25 is 1. Write a recursive function namd GCD (x,y) that implements this division algorithm: if y=0, then the GCD of x and y is x; otherwise the GCD of x and y is the same as the GCD of y and x%y.","The binomial coefficients may be defined by the following recurrence relation, which is the idea of the pascal's triangle. C(n,0)=1 and C(n,n)=1 for n=0 C(n,k)=C(n-1,k)+C(n-1,k-1) for nk0 Write a recursive function which will generate C(n,k) by using the above formula","The Ackermann's function, defined as follows, is a standered device to determine how well recursion is implemented in any device.","Yes, the above exercises are a bit difficult. But the key is finding C(n,k) or A(m,n) and directly implementing it. The rest is just about when to stop the recursion conditions. All the best for solving them! Solving these exercises will make you all fluent with recursion and it's problem solving principles."]},{"l":"All Answers here","p":["A bit about the course I know, I am going a bit slow for some of you. But this is for the benifit of those who are here for the first time. This week was a gentle intro to user defined functions. In the coming weeks, I will cover all the details of the language. For those who already know coding basics, they can just skim through the blog and mull upon the exercises. The exercises provided will strengthen and reinforce the concepts. Moreover they are directly taken or similar to past coding tests from the interview panel...","\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25 Follow me on GitHub for updates........."]}],[{"i":"learning-python--intermediate-course-day-5-exploring-the-math-module","l":"Learning Python- Intermediate course: Day 5, Exploring the math module","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-study-how-to-import-modules-in-python-and-explore-the-math-module","l":"Today we will study how to import modules in Python, and explore the math module."},{"i":"what-are-modules","l":"What are modules?","p":["A module is a python file containing Python definitions and statements. A module it must end with the .py extension like all other Python files.","A module is basically a bunch of functions, variables and runnable code. By grouping code into modules makes the code easier to read, logically understandable and enhances flexibility. You can get the official documentation of modules here","We will learn to create our own modules in the later parts, but today we explore one of the very useful Python module, that is the math module."]},{"i":"importing-modules","l":"Importing modules.","p":["For using the math module, we just need to type import math, and you are set to go! You can import any Python module using the import statement."]},{"l":"The math module","p":["The math module in Python is a very useful module which lets us use mathematical functions in Python. It contains many useful mathematical functions and some constants. You can check the whole list here","Here I am presenting some of the very commonly used functions."]}],[{"i":"learning-python--intermediate-course-day-6-math-exercises","l":"Learning Python- Intermediate course: Day 6, Math Exercises","p":["Originally published ion the dev.to platform here"]},{"i":"in-the-last-part-we-covered-the-math-module-in-this-part-we-will-solve-some-questions-related-to-it","l":"In the last part we covered the math module. In this part, we will solve some questions related to it."},{"i":"sample-questions","l":"Sample questions.","p":["Write a program to check if a number is an \"Armstrong number\" or not"]},{"l":"Alternative","p":["Write the function power which returns the number raise to a power without using the math function pow()","Logic The function power is a function which makes use of recursion in Python. The power is raised using recursive multiplication."]},{"l":"Alternative-"},{"i":"exercise","l":"Exercise.","p":["Write the following functions without using their predefined math versions.","hypot()","sqrt()","asinh()","Answers in this Learning Python Repository"]}],[{"i":"learning-python--intermediate-course-day-7-making-python-modules","l":"Learning Python- Intermediate course: Day 7, Making Python modules","p":["Originally published on the dev.to platform here"]},{"i":"we-have-learnt-how-to-use-predefined-python-modules-today-we-will-create-our-very-own-python-module-so-put-your-seatbelts-on-for-this-thrilling-python-journey","l":"We have learnt how to use predefined python modules. Today we will create our very own Python module. \uD83E\uDD29 So put your seatbelts on for this thrilling Python journey\uD83D\uDE80"},{"l":"Modules in Python","p":["Creating a module in Python is a very easy task. image","Step I Make a python file named mymodule.py (or any other name ending with .py) which contains various functions. Do this in Python IDLE or any other IDE. Here is a sample file-","Step II Save the python file (or copy-paste the file) in the Lib (not libs) folder of the Python source code. image","image","Step III In the file in which you want to use the module, write import mymodule(import the relevant module name) After that, just use the functions in the module as predefined functions. Simple !!","Here is the program which uses the functions in our module.","We now save it in a file named 'mymoduletester' and run it. image","After we run the file, an output is generated in a command line window. image","OUTPUT-","That's it! We have successfully made our own module and used it in our code!\uD83E\uDD13 Cool!\uD83D\uDE0E","I have used the IDLE for Python over here, but you are free to use any editor you want. We can have the same effect by using the online GDB compiler as shown below. image","✌️So friends that's all for now. \uD83D\uDE0A Hope you all are having fun.\uD83D\uDE0E Please let me know in the comment section below \uD83D\uDC47. And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments below or gmail me. \uD83D\uDE09 Thank you all\uD83D\uDC4D","Also please visit the Learning-Python repo made especially for this course and don't forget to star it too"]}],[{"i":"learning-python--intermediate-course-day-8-summary-of-the-week-and-nested-modules","l":"Learning Python- Intermediate course: Day 8, Summary of the week and nested Modules","p":["Originally published on the dev.to platform here","Hello friends, today we will summarize the learning of the week."]},{"l":"Summary of the week","p":["Day 5 We learnt that modules are a way of packaging our code which enhances flexibility and code reusability. Modules are basically python files which contain various functions. One example of which is the built in module math. The math module in Python is a very useful module. We can perform various mathematical functions using the module.","Day 6 In this part we solved many questions related to the math module for example Armstrong numbers, use of recursion in solving power operations, etc.","Day 7 We saw how to make our own Python modules and how to use them in our code. We can make Python module by saving a Python file (with the .py extension in the Lib folder of Python source. Then we can use the modules by using the import statement."]},{"l":"Using modules in modules","p":["We can use a module in another module. Here is a sample question-","Create a module named ModuleC to calcuate the combination of two numbers. This module must import ModuleB which contains the factorial function.","ModuleB","ModuleC","main","What will happen if we try to call the function factorial from he main? We cannot do so as the main does not directly import ModuleB. Hence, we cannot use the factorial defined in B as ModuleC.factorial() or ModuleB.factorial()","For the above code to run, we need to import the module B.","We all know that neither me nor you have ever seen each other. Learning in remote environment is a difficult, and teaching is perhaps even more difficult. Teaching is never a one-way process. I request everyone to participate actively in this course, either through comments below or forking on Github Learning-Python repo\uD83D\uDE03 \uD83D\uDE03 \uD83D\uDE03","For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways","\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25 Next day will begin from Tuesday\uD83D\uDCC5"]}],[{"i":"learning-python--intermediate-course-day-9-complex-numbers-part-1","l":"Learning Python- Intermediate course: Day 9, Complex numbers part 1","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-learn-about-complex-numbers-in-python-by-importing-the-cmath-module","l":"Today we will learn about complex numbers in Python by importing the cmath module.","p":["Handling complex numbers in Python is very easy. We can easily do normal stuff like addition and subtraction, etc. without using any functions!. Complex numbers have their use in many applications related to Mathematics or algorithm based problems. They provide an excellent alternative to coordinates or vector systems.","The cmath module provides useful functions to handle complex numbers and their properties. The good thing is that the module is already inbuilt and preinstalled in Python. So no need to download and install any third party add-ons! The cmath module is very similer to math module, but has the functionality to handle complex as well as real numbers. You will find the entire documentation here","In case you want to check out how tedious it is to implement complex numbers in Java, you might like this repository. This repository contains a class \"Complex\", which is the implementation of complex numbers. You can call the constructor to make complex numbers. This class also contains many useful methods to operate on complex numbers."]},{"i":"making-complex-numbers","l":"Making complex numbers.","p":["We can make a complex number x+iy by using the following syntax","Let us now create a few complex numbers."]},{"i":"real-and-imaginary-parts-of-complex-numbers","l":"Real and imaginary parts of Complex numbers.","p":["The real and the imaginary parts of the complex numbers can be obtained by z.real and z.img","Let us now see a full fledged program"]},{"i":"operations-on-complex-numbers","l":"Operations on Complex numbers.","p":["Let us now see how to do the usual operations on complex numbers. Those who are unfamiliar with math behind the operations may check this out"]}],[{"i":"learning-python--intermediate-course-day-10-complex-numbers-part-2","l":"Learning Python- Intermediate course: Day 10, Complex numbers part 2","p":["Originally published on the dev.to platform here"]},{"i":"in-the-last-part-we-learnt-the-basics-of-operating-with-complex-numbers-today-we-will-cover-many-different-functions-related-to-complex-numbers","l":"In the last part, we learnt the basics of operating with complex numbers. Today we will cover many different functions related to complex numbers."},{"l":"Phase of complex number","p":["The phase or the argument of any complex number can be found out using the phase() function."]},{"i":"polar-form-of-complex-number","l":"Polar form of complex number.","p":["We can convert a complex number to polar form using the polar() and back into rectangular form using the rect() function.","Note the return types for the functions","polar() returns a tuple.","rect() returns a complex number."]},{"l":"Functions is the cmath module","p":["Let us now explore the functions in the cmath module which are frequently used. The example below explains the use of the most commonly used functions. Entire list of functions with documentation can be found here","Note- j is often used in electronics instead of i, hence in Python expressions like 1+1i are written as 1+ij"]},{"i":"applications-of-complex-numbers-to-computer-science","l":"Applications of complex numbers to computer science.","p":["Well I know you all must be wondering why in the world are we learning about complex numbers. Well, this is because complex numbers are a very handy tool in solving many real world problems. They are a great way to store in coordinate systems. As we just saw, they are very easy to implement than when compared to vectors. In Python, complex numbers can be operated naturally just like plain old real numbers.","Other applications of complex numbers include-","Signal processing","Image processing","Scientific computing","Graphics","Computer vision","Data compression","Read also","What are some applications of complex numbers in computer science?","complex numbers in programming?"]},{"i":"for-those-who-are-new-to-the-concept-of-complex-numbers-might-like-the-video-below","l":"For those who are new to the concept of complex numbers might like the video below.","p":["Did You like the content?\uD83D\uDE0E Please let me know in the comment section on dev.to\uD83D\uDC47. And don't forget to like the post if you did. \uD83D\uDE0D I am open to any suggestions or doubts. \uD83E\uDD20 Just post in the comments on dev.to or gmail me. \uD83D\uDE09 Thank you all\uD83D\uDC4D","Please star this repository!"]}],[{"i":"learning-python--intermediate-course-day-11-random-numbers","l":"Learning Python- Intermediate course: Day 11, Random numbers","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-cover-the-random-module-in-python","l":"Today we will cover the random module in Python.","p":["Just like the math and cmath modules, the 'random' module is built in into Python, so we do not need to take any extra efforts to download or install it.\uD83D\uDE0A"]},{"l":"Generating a random number","p":["The random() method in random module generates a floating point number between 0 and 1. Note that Python is case sensitive, hence random() and Random() are different!","But many times we want a number in between a specific range of numbers. This is where the randint() method comes handy. The randint() method generates a integer between a given range of numbers.","Note that the input parameters of the randint() gives must be in ascending order only. For example this won't work","The random() method is often used in data science and statistical operations to obtain random numbers between 0 to 1. For other applications, in most cases the randint() function becomes useful","Typing 'random' every time is just a waste right? We can shorten up the code by replacing random with a short keyword, whoch we can use everytime. The syntax for the following is","import random as rd","So now every time instead of writing random, we can just write rd Example-"]},{"i":"list-of-random-numbers","l":"List of random numbers.","p":["Many times, we require to have a list of random numbers.","One way to do that is appending random numbers to the list. We first create an empty list and then append the random numbers one by one.","Another way is by using the method sample().","The sample() method takes two arguments. One is the list of numbers to choose random numbers from, and the other is the number of random numbers to choose. The examples below will make things clear.","The range() function returns a list of values from the start to the end.","✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨","\uD83D\uDE0E Your suggestions motivate me, so please please please let me know in the comment section on dev.to if you this part or not. \uD83E\uDDD0 And don't forget to star this repository if you did\uD83D\uDE0D"]}],[{"i":"learning-python--intermediate-course-day-12-summary-of-the-week","l":"Learning Python- Intermediate course: Day 12, Summary of the week","p":["Originally published on the dev.to platform here"]},{"i":"today-let-us-revise-whatever-we-have-learnt-so-far-in-this-week","l":"Today let us revise whatever we have learnt so far in this week."},{"l":"Summary of the week"},{"i":"day-9-complex-numbers-part-1","l":"Day 9, Complex numbers part 1","p":["In this part we explored the cmath module. The cmath module in Python s a built in module which contains mathematical functions related to operations of complex numbers. Complex numbers can be created in the following manner z= complex(x,y) z.real and z.imaginary provide us with the real and imaginary parts.","We also saw how easily we can operate complex numbers in Python. We can do operations like addition, product and raising to a power, simply with the use of operators. Unlike other languages, we do not require any other functions for these simple operations."]},{"i":"day-10-complex-numbers-part-2","l":"Day 10, Complex numbers part 2","p":["This part was reserved for cmath module functions. We covered functions like phase() and polar() which are frequently used while operating with complex numbers. After that, we saw how we can use the methods in the cmath library for more complicated mathematical operations. Entire list of functions with documentation can be found here","Complex numbers are useful in many branches of programming. We checked out a few in this part. For those who are not comfortable with the use of complex numbers might like this video series"]},{"i":"day-11-random-numbers","l":"Day 11, Random numbers","p":["In this part we focused on the Python random module. Just like the math and cmath modules, the 'random' module is built in into Python, so we do not need to take any extra efforts to download or install it. We saw how to cover complex numbers in the range 0-1 by using the random() method. The randint() method generates a integer between a given range of numbers. We also covered methods to return a list of random numbers.","Thank you ! That was all for this week \uD83D\uDC4D Meet you next Tuesday \uD83E\uDD20","For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways","\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25 Follow me on GitHub for updates........."]}],[{"i":"learning-python--intermediate-course-day-13-the-statistics-module","l":"Learning Python- Intermediate course: Day 13, The Statistics Module","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-cover-the-statistics-module-in-python","l":"Today we will cover the statistics module in python.","p":["Python has the built-in module statistics that you can use to calculate mathematical statistics of numeric data. You do not require to install anything extra. This statistics module was introduced new in Python 3.4.","The below sample shows the various functions in the module. I have ordered the methods as per the level of usage.","You will find a more detailed and comprehensive explaination at the official documentation"]}],[{"i":"learning-python--intermediate-course-day-14-introduction-to-the-decimal-module","l":"Learning Python- Intermediate course: Day 14, Introduction to the Decimal module","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-cover-a-gist-of-the-decimal-module-in-python","l":"Today we will cover a gist of the decimal module in Python.","p":["The Decimal module is a very vast module with a huge amount of functions. In this course, only a basic idea about the module will be given. Those who want to learn about it in depth would like to visit the Official documentation of the decimal module The documentation is quite easy to understand and covers everything related to the module.","\"Computers must provide an arithmetic that works in the same way as the arithmetic that people learn at school.\"- excerpt from the decimal arithmetic specification.","The Decimal module is a way by which faster and accurate floating point arithmetic can be achieved.","Let us take a few simple calculations on the Python command prompt","Strange eh? Such ambiguities often arise when performing floating point arithmetic. Let us now see how to do these calculations 'properly' using the decimal module.","Explanation. We first import the module using from decimal import * Or we can simply import decimal and type in decimal.Decimal every time we want to use it.","from decimal import * a way by which we can use everything in the module. We do not require to import a specific function from the module, but we import the entire module itself. More about importing here.","When we do decimal operations, we can set the precision by giving value to getcontext().prec This sets the value of the precision accordingly.","When we say Decimal(2.2) we are creating a decimal object, with the value 2.2. One important thing to note here is that 2.2 is not of the type float, but of the type Decimal The cool fact is that we can directly operate on them using our arithmetic operators.","The result has the precision equal to what we have set. But the result is of the type Decimal object. We can convert it into floating point or int data types. The print() method automatically converts the Decimal \"data type\" (object) into a readable string.","Some common mistakes while importing the decimal module","So that was all we would like to cover in the decimal module. You might like to visit this link for learning about more functions or check out the official documentation","Exercise- Check out the as_tuple(), sqrt() and the normalize() methods from the official documentation. Out of them, the most interesting method is the as_tuple() method. It is very useful when it comes to separating a decimal number into digits. The method returns a tuple containing sign, digits and the exponent value of the decimal. Note that in the sign field when the number is 0, it means the decimal is positive, when it is 1, it represents the negative number."]}],[{"i":"learning-python--intermediate-course-day-15-complete-guide-to-the-fractions-module","l":"Learning Python- Intermediate course: Day 15, Complete guide to the fractions module","p":["Originally published on the dev.to platform here"]},{"l":"Today is your complete guide to fractions in Python","p":["The fractions module provides support for rational number arithmetic.","The fractions module is yet another inbuilt module in Python. This module is very useful when we deal with floating numbers. This module converts floating numbers to more understandable fractions."]},{"i":"expressing-numbers-as-fractions","l":"Expressing numbers as fractions.","p":["Every number can be represented as a fraction. (Well any number with finite decimal places at least) Sometimes converting a number into fractions makes it easier to understand and easier to comprehend. This is also useful when you require to use rational arithmetic over floating point arithmetic for various mathematical or scientific work.","We can see how to use this module from the example shown below.","The fr.Fraction() converts a floating number into a fraction object. The print function automatically converts the fraction object into a readable format. When the denominator is zero, a ZeroDivisionError is returned"]},{"i":"here-is-another-example-which-i-have-copied-from-the-official-documentation-and-annotated-it-with-comments-to-make-it-understandable","l":"Here is another example, which I have copied from the official documentation and annotated it with comments to make it understandable."},{"i":"operations-on-fractions","l":"Operations on fractions.","p":["Operating on fractions is just like operating on real numbers"]},{"i":"methods-in-the-fractions-module","l":"Methods in the fractions module.","p":["The fractions module does contain a few useful methods as shown below.","The as_integer_ratio() This returns a tuple two integers, whose ratio is equal to the Fraction in such a way that the denominator is positive.","The limit_denominator()","Functions to round of the fractions. There are various functions to round off the fractions as shown below.","That's all for now. You might want to check out the official documentation of the fractions module too!"]}],[{"i":"learning-python--intermediate-course-day-16-summary-of-the-week","l":"Learning Python- Intermediate course: Day 16, Summary of the week","p":["Originally published on the dev.to platform here","This week we completed the 'numeric and mathematical modules' by covering three modules, namely Statistics decimal and fraction"]},{"l":"Summary of the week","p":["Day 13, The Statistics Module In this part, only a single sample program was given, which showed various statistical functions with comments explaining what they did. You will find a more detailed and comprehensive explaination at the [official documentation](You will find a more detailed and comprehensive explaination at the official documentation)","Day 14, Introduction to the Decimal module The Decimal module is a way by which faster and accurate floating point arithmetic can be achieved. We can avoid Python errors like 0.1+0.2+0.3-0.7=-0.09999999999999987 by using this module. The decimal module is a very vast module, and only a small gist of it was given in this part. You might like to visit this link for learning about more functions or check out the official documentation","Day 15, Complete guide to the fractions module The fractions module is a inbuilt module in Python which is very useful when we have to deal with floating point numbers. The fr.Fraction() converts a floating number into a fraction object, making it easier to comprehend. In this part, many commented pieces of code examples were provided for getting a full grasp of the subject. Operating on fractions is just like operating on real numbers, and we can use the mathematical operators to calculate them in a very easy way. We also looked at some useful methods in the module.","Note Not all would require to get the most out of these modules, hence you may feel free to skip these parts. I have tried to give just a brief summary of the modules, especially the decimal module without diving too deep into the details. The documentation of the modules is also very precise and clear, hence rather than explaining facts in depth, I have tried to speeding things up. By covering only the important parts which are more likely to be used, the course aims to cover a gist of the modules in least time possible."]},{"i":"python-gui-from-next-week","l":"Python GUI from next week\uD83E\uDD29","p":["\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25 Follow me on GitHub for updates......."]}],[{"i":"learning-python--intermediate-course-day-17-tkinter--a-fast-and-easy-way-to-create-gui-applications","l":"Learning Python- Intermediate course: Day 17, Tkinter — a fast and easy way to create GUI applications.","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-begin-with-gui-in-python","l":"Today we will begin with GUI in Python!","p":["Python has a inbuilt package for GUI handling known as 'Tkinter'. This GUI toolkit is available on most Unix platforms, including macOS, as well as on Windows systems.","Note- Tkinter provides a powerful object-oriented interface to the Tk-GUI toolkit. GUI requires a lot of OOP stuff. OOP python is still not covered in this course, and would be subsequently covered after GUI is completed. So till that time, don't worry if OOP things are not 100% clear. While learning GUI it is important to understand how to design things rather than how they are implemented by python. Learning OOP concepts will throw light upon how they are implemented and things will start getting clearer and clearer."]},{"i":"but-what-is-tkinter","l":"But what is Tkinter?","p":["The Tkinter package is actually an interface to the GUI toolkit, called as Tk-GUI. However, Tkinter is not the only GUI Programming toolkit for Python. It is one of the most common and easy to learn interface. It is the only framework that’s built into the Python standard library. Other notable interfaces are wxPython and JPython ( Jython. wxPython is an open-source Python interface for wxWindows, while JPython is a Python port for Java. JPython boasts of giving Python scripts a seamless access to Java class libraries on the local machine. Other alternatives include- PyQt, PySide, Pygame, Pyglet, and PyGTK. You can check them out at the wiki links provided.","The name Tkinter comes from Tk interface. Tkinter was written by Fredrik Lundh. It is free software released under a Python license.","Advantages of Tkinter","Tkinter is lightweight and a bit easier to use than others.","Tkinter is cross-platform, so the same code works on all systems ( Windows, macOS, and Linux)","Moreover, Tkinter elements are built using native operating system elements, So they easy camouflage to the system","Disadvantage of Tkinter","Tkinter is outdated... No Expired might be the right word. The UI looks old, or rather ancient. If you want to build a good looking shiny application, then Tkinter is not for you!","This is why Tkinter is ideal for just studying and exploring GUI in Python."]},{"i":"checking-if-tkinter-is-properly-installed-or-not","l":"Checking if Tkinter is properly installed or not.","p":["Let's see how to check if Tkinter is properly installed on the system, and which version is installed. We can do that by typing the command python -m tkinter in the command line. This opens a small box with two buttons as shown below. Inside the box, the version of the Tcl/Tk is shown.","image","Didn't work for you? Well it didn't work for me either.","In my device, the py keyword opens python, so typing in py -m tkinter worked for me.","Common mistake-- We need to type this in the command prompt, and not the python command line!","This won't work-","When we click on the click me button, The click me is surrounded with square brackets as shown.","Each time we click it, an additional pair of paranthesis encloses the text on the button-clickme","Clicking the 'quit' button closes the box.","That's all for this part. Excited? Before you even realize, we will be making applications much more powerful and exciting than this one. So stay tuned for the next parts of the Learning Python Course.","\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25 Follow me on GitHub for updates......."]}],[{"i":"learning-python--intermediate-course-day-18-tkinter--types-of-widgets-part-1","l":"Learning Python- Intermediate course: Day 18, Tkinter — Types of Widgets part 1","p":["Originally published on the dev.to platform here"]},{"l":"Today we will explore widgets in Tkinter","p":["Recap Tkinter is the inbuilt python module that is used to create GUI applications. It is one of the most commonly used modules for creating GUI applications in Python as it is simple and easy to work with. For more information about Tkinter and it's advantages, please check out the previous part of the course."]},{"i":"what-are-widgets","l":"What are widgets?","p":["Defination A software widget is a relatively simple and easy-to-use software application or component made for one or more different software platforms.","In simple words, widgets are graphical elements like buttons, frames, textboxes etc. which are helpful in taking input from the user in graphical format. In Tkinter, Widgets are objects, that is they are instances of classes that represent buttons, frames, and so on. To make concepts simpler, just as we had treated strings and dictionaries, we can treat widgets too as as a 'button data type'. So the widgets have some data and have some methods to process that data."]},{"l":"Types of widgets","p":["There are a lot of GUI widgets, both fancy and simple ones. (You can check out this wiki link for a complete description) However there are some 18 widgets which are supported by Tkinter and are of a real significance."]},{"l":"Let us now check out all the widgets one by one","p":["Button Our plain old button. Python allows us to set the look and feel of the button. image","Canvas The canvas widget adds graphics to the window. It can be used to draw graphs in the application. image","Checkbox Checkbox (or check-button) is an on-off type of button. The user can give binary inputs by clicking the button on or clicking the button off. The user can select one or all choices from the available list. image","Radiobutton The Radiobutton also is an on-off type of button, but the user can only select one (and only one) out of the all available choices. image"]},{"l":"Checkboxes vs. Radio Buttons","p":["Checkbox allows one or many options to be selected. It is used when you want to allow user to select multiple choices. A radio button is used when you want to select only one option out of several available options. It is used when you want to limit the users choice to just one option from the range provided.","Radio buttons are used when there is a list of two or more options that are mutually exclusive and the user must select exactly one choice. In other words, clicking a non-selected radio button will deselect whatever other button was previously selected in the list. Checkboxes are used when there are lists of options and the user may select any number of choices, including zero, one, or several. In other words, each checkbox is independent of all other checkboxes in the list, so checking one box doesn't uncheck the others. More on Checkboxes vs. Radio Buttons By Nielsen Norman Group"]},{"i":"to-be-continued","l":"To be continued.....","p":["Image credits- All images in the text are my own screenshots."]}],[{"i":"learning-python--intermediate-course-day-19-tkinter--types-of-widgets-part-2","l":"Learning Python- Intermediate course: Day 19, Tkinter — Types of Widgets part 2","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-cover-the-more-types-of-the-widgets-in-tkinter","l":"Today we will cover the more types of the widgets in Tkinter.","p":["Recap widgets are graphical elements like buttons, frames, textboxes etc. which are helpful in taking input from the user in graphical format. In the last part we saw different types of widgets like checkboxes, radio-buttons and simple buttons. In case you have missed the last part here is the link."]},{"i":"types-of-widgets-in-tkinter-continued","l":"Types of widgets in Tkinter continued..........","p":["Entry","Everyone knows what a scrollbar is. The scrollbar widget is used to scroll down the content of the other widgets like listbox, text, and canvas. We can also create the horizontal scrollbars to the Entry widget.","Frame","image","Label","Listbox","Listbox also is output type of widget. It can display only text elements. Moreover, all the text items must contain the same font and colour.","Menu button is a drop-down menu. We can select one or more options from the drop down menu box.","Menubutton","Scale","Scrollbar","Text","The difference between a text-box and entry widget is that entry widget can only take input of one line while textbox can accept multiline inputs","The drop down opens once the menu button is clicked.","The entry widget is a widget which takes in textual input. It can only be used for taking in one line of text from the user.","The Frame widget is like a photo frame. We can stick on various types of widgets into this 'container'. It has only one job- To provide a place where other widgets can be fixed. A blank frame is just like a plain sheet.","The label widget is an output type of widget. It is used to display text values in the application.","The Scale widget is a very interesting widget. It is used to create a graphical slider which the user can move around for the input. We can control the minimum and maximum values along with the resolution of the scale. It provides a 'continues' alternative to 'discrete' radio buttons. Which means rather then having to specify 50 checkboxes we can just have one slider. It is useful over the Entry widget when the user is forced to select only one value from the given range of values.","The Text widget is used to show the text data on the Python application. However, Tkinter provides us the Entry widget which is used to implement the single line text box.","The user can choose one or more items from the list depending upon the configuration."]},{"i":"to-be-continued","l":"To be continued.....","p":["Image credits- All images in the text are my own screenshots."]}],[{"i":"learning-python--intermediate-course-day-20-tkinter--types-of-widgets-part-3","l":"Learning Python- Intermediate course: Day 20, Tkinter — Types of Widgets part 3","p":["Originally published on the dev.to platform here"]},{"l":"Today let us finish off with the remaining Tkinter widgets"},{"l":"Summary of the week","p":["This week we learnt about Tkinter. We also checked out the various widgets supported by Tkinter. Today let us finish of the remaining widgets."]},{"i":"types-of-widgets-in-tkinter-continued","l":"Types of widgets in Tkinter continued..........","p":["menu The Menu widget is used to create various types of menus in the python application. The types of menus include top level, pull down, and pop up","image","message The message widget is used to display a message in the application. It looks similar to the label widget.","Toplevel This widget is used to make a pop-up like effect. It creates another window. It can be used to represent some extra info. This window is managed internally by the system. (Window manager in Windows)","In this program, clicking on the open buttons activates the Toplevel widgets and creates another blank window.","Closing the main application window closes all windows.","spinbox Spinbox is a less attractive version of the slider widget. Again, It is useful over the Entry widget when the user is forced to select only one value from the given range of values.","We can also type in the spinbox.","panelWindow The PanedWindow widget is a resizable frame widget. It contains one or more child widgets arranged horizontally or vertically. Unlike the frame widget, child widgets can be resized by the user, by moving the separator lines. These separator lines are called as sashes.","LabelFrame LabelFrame is also a type of frame, but we can add borders to the widgets.","MessageBox The messagebox module is used to display the message boxes in the python applications. It is a kind of alert in the application.","Image credits- All images in the text are my own screenshots.","\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25 Follow me on GitHub for updates......."]}],[{"i":"learning-python--intermediate-course-day-21-hello-world-in-tkinter-","l":"Learning Python- Intermediate course: Day 21, Hello world in Tkinter !","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-write-hello-world-in-tkinter","l":"Today we will write hello world in Tkinter \uD83E\uDD18","p":["Recap: Tkinter is an inbuilt python library for handling GUI. More about it here"]},{"l":"Creating a blank window","p":["First we will create a blank window in Tkinter.","image","Explanation-","import tkinter We first import Tkinter. We can also use import tkinter as tk or from tkinter import * to reduce the typing 'tkinter.abc()' everytime.","master=Tk() Create an instance of Tkinter frame or window. Here 'master' is an instance of the window object.","master.geometry('400x200+100+100') Set the geometry of Tkinter frame. We will understand what the parameters mean in a moment."]},{"i":"setting-the-geometry","l":"Setting the geometry.","p":["The geometry attribute of the Tkinter consists of four parts. The first two parts (separated by x) denote the dimensions of the frame. Changing these values will change the default dimensions of the frame.","image","The next two parameters (separated by +) represent the coordinates at which the frame appears on your screen. We can skip these two parameters and go by the default values. Although we can resize and reposition the frame using the cursor, presetting values of the frame helps while setting the user experience."]},{"i":"setting-title-to-the-frame","l":"Setting title to the frame.","p":["Till now, the frame had the default title as 'tk'. We will now change the title to 'My First Program'","image"]},{"i":"adding-text-to-the-window","l":"Adding text to the window.","p":["We can add text to the window using the label widget. The label widget here takes two parameters. One of them is the text we want to input while other is the instance of the frame. (that is the Tk() instance). After we do that, we then need to place the widget in a proper coordinate on the frame. We do that using the place() attribute. The place attribute takes two inputs, the x and the y values of the coordinates. place(x = 150, y = 150)","image","Forgetting the place() attribute will not display the text","So friends we have successfully understood and completed the 'Hello world' program in Tkinter! More exciting UI to come, as the journey continues..."]}],[{"i":"learning-python--intermediate-course-day-22-bold-or-italics-","l":"Learning Python- Intermediate course: Day 22, Bold or Italics !","p":["Originally published on the dev.to platform here"]},{"i":"today-let-us-explore-checkboxes-in-python","l":"Today let us explore checkboxes in Python.","p":["Today we are going to make a simple program which displays text in bold or italics, or both. This is a standered example for learning checkboxes. The layout will be a simple one. There will be a label which displays the word 'text'. There will be two checkboxes for bold as well as italics. When the checkboxes are clicked, then the label text must become bold or italics or both depending on the checkboxes. image","image image","image"]},{"i":"making-the-label","l":"Making the label.","p":["Just as we made a hello world label yesterday, we will make one label today. The label will have the text \"text\".","Yesterday we had used the place attribute to place the label in the position. But as the checkbox program has many widgets to be placed, we will use the pack() method. This method packs the label widget into the frame and the mainloop() displays them. More abot window.mainloop() here","image"]},{"l":"Function to check and set bold and italics","p":["We will now make a function named ChangeLabel to change the values of the label. For that we make two Boolean attributes, bold and italics. The function must take two Booleans as inputs and must change the value of the label.","The values of the label can be changed using the config() function. label.config(text='hello') changes the text value to hello. Similarly we can change the bold or the italics using the font attribute. font=('Helvetica', 18, 'bold')","After making the function, we test it for all combinations.","Note pack() and mainloop() attributes must be at the end of the program, else the program won't function as expected.","image image"]},{"i":"setting-checkboxes","l":"Setting checkboxes.","p":["We can make checkboxes with the following parameters.","window: Set the window frame instance into the checkbox","text=Bold: Set the text of the checkbox","variable=bold: give the checkbox a variable to change. When the button is on, the value of the bold will be set 1 and when it is off, the value will be 0.","onvalue=1, offvalue=0: Set the on and off values.","command=ChangeLabel: The command to be executed"]},{"i":"but-before-we-can-do-use-the-checkbox-we-need-to-do-two-important-changes-to-our-function","l":"But before we can do use the checkbox, we need to do two important changes to our function."},{"i":"number-one-make-the-variables-global","l":"Number one: Make the variables global.","p":["We cannot parametrize any function in the command checkboxes. This means we cannot do Boldcheckbox= Checkbutton(window,text=Bold,........,command=ChangeLabel(bold,italics)) The only workaround for this is to use global variables bold and italics"]},{"i":"number-two-tkinter-doesnt-support-booleans","l":"Number two: Tkinter doesn't support Booleans!","p":["You cannot directly change the values of the boolean variables through the buttons. Boldcheckbox= Checkbutton(window,text=Bold, variable=bold,onvalue=True, offvalue=False,command=ChangeLabel) fails!!","But Tkinter has a special object for handling Boolean types known as BooleanVar(). The BooleanVar() is an object which returns the Boolean value using the BooleanVar.get() method and we can set the value using the BooleanVar.set() method. The BooleanVar represents 1 for true and 0 for false.","So we will now make our function use global objects bold and italics and change the if statement. The new function is as shown.","BooleanVar() and other such objects will be explained in more depth in the next session"]},{"i":"finally-we-are-there","l":"Finally, we are there......","p":["The entire program will become-","image"]}],[{"i":"learning-python--intermediate-course-day-24-summary-of-the-week-and-adding-colors","l":"Learning Python- Intermediate course: Day 24, Summary of the week and Adding Colors","p":["Originally opublished on the dev.to platform here"]},{"l":"Today we will check how to add background color to the widgets"},{"i":"setting-the-background-color","l":"Setting the background color.","p":["We can set the background color of the window as well as the widgets using the bg attribute.","The string is not case sensitive. image","We can set the background color of the widgets in the same manner","image"]},{"l":"Setting the font color","p":["The font color can be set using the fg attribute. This is just the same as the bg attribute"]},{"i":"program-to-implement-colors","l":"Program to implement colors.","p":["Let us now build a program, the same one as yesterday. A color will be chosen from the radio-buttons instead of programming languages. The background color of the Label will be accordingly to the color chosen.","Here are the snapshots-","image"]},{"i":"summary-of-the-week","l":"Summary of the week.","p":["Day 21 We learnt how to make Tkinter windows. We learnt how to set the default geometry and position of the window using the geometry() attribute. We made our very first 'hello world' application in Tkinter using the first widget- the Label widget.","Day 22 We explored checkboxes by making a program which renders text bold, italics or both. This is achieved through the font attribute in Tkinter.","Day 23 We understood the Tkinter variables IntVar(), BooleanVar(), FloatVar() and StringVar(). They are actually object instances which hold the primitive data types. They can be accessed by using their getter and setter methods. After that we made a program using Radio buttons which takes in the favorite programming language. The users can only choose one among the available options, which is the characteristic of the radiobuttons."]},{"l":"The .pyw extension","p":["We usually store the python programs with the .py extensions. But this opens up a command prompt along with the file. Hence, for GUI applications, it is a good idea to name the files with an .pyw extension instead of a .py extension. This prevents the opening of the command prompt. More about it here"]}],[{"i":"learning-python-intermediate-course-day-25-buttons-entry-and-textboxes","l":"Learning Python- Intermediate course: Day 25, Buttons, Entry and Textboxes","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-cover-three-widgets-namely-button-entry-and-textbox","l":"Today we will cover three widgets, namely button, entry and textbox."},{"l":"The plain old button","p":["We have covered check buttons, radio buttons and label in the previous parts. But now we will see how to make a simple clickable button.","The button widget can be created as shown button=tk.Button(form,text=Press Me,command=cmd)'cmd' is the command to be executed once the button is pressed. The example below will make things clearer."]},{"l":"Making a blank button","p":["image","On pressing the button, nothing happens. It is just a blank button. But now we will add a counter to count the number of times the button is pressed."]},{"i":"adding-counter-to-the-button","l":"Adding counter to the button.","p":["On pressing the button, the text of the button changes in accordance to the number of times the button is pressed. This is achieved by using the IntVar() variable.","image"]},{"i":"the-entry-widget","l":"The Entry widget.","p":["The entry widget is a single line textbox. The users can give in a single line input via this widget. entry = tk.Entry(parent) We can also add other parameters to the entry widget like color, etc. Here is an example below which demonstrates a blank entry widget."]},{"i":"blank-entry-widget","l":"Blank entry widget.","p":["image"]},{"i":"getting-value-from-the-entry","l":"Getting value from the entry.","p":["The value of the text can be obtained using the get() function. The below example will make things very clear.","To process the input data, we will need the help of other widgets. Button for example. In the above example, when the button is pressed, the button text changes according to the value of the entry.","image"]},{"i":"textbox","l":"Textbox.","p":["Textboxes are just the same as entry widgets, the only difference is that we can add multiple lines to it. Just replace 'Entry' by 'Text' and you are done!"]},{"i":"blank-textbox","l":"Blank textbox.","p":["image"]},{"l":"Setting the text-space","p":["Using the height and width attributes, we can set the number of input characters in each line.","image"]},{"i":"getting-input-from-the-textbox","l":"Getting input from the textbox.","p":["We can get the input in the same manner. We need to specify two parameters to the get method. The start and the end parameter. text=TB1.get(1.0, end-1c) will give the entire result.","image","So friends, that was all for this part. In the next part, we will do a password management program! So stay tuned in this course!. Follow me on GitHub for updates."]}],[{"i":"learning-python--intermediate-course-day-26-password-manager-tkinter","l":"Learning Python- Intermediate course: Day 26, Password Manager-Tkinter","p":["Originally published on the dev.to platform here"]},{"i":"let-us-build-a-login-application-which-gets-the-passwords-and-usernames-from-users","l":"Let us build a login application which gets the passwords and usernames from users."},{"i":"todays-application-specs-are-as-follows","l":"Today's application specs are as follows","p":["There are four widgets- two Entry (single line textboxes), one button, one label in the program.","The user enters username in the first textbox. Password in the second textbox. But the password is encrypted (not shown)","After user hits the sign up button, the username is displayed on the label and the password is stored. We will not store the password now, just make a dummy password entry function stub. The password can be stored in files in encrypted format or by other methods once we cover file handling in Python. Till that time, assume that the storepassword() function stores the passwords and username automatically"]},{"i":"encrypting-the-entry-widget","l":"Encrypting the entry widget.","p":["We don't want others to see our passwords while we type them right? This can be achieved using the show=* attribute.","TB1=tk.Entry(form,width = 20,show=*)","Let us now revisit yesterday's program and hide the entry widget.","image"]},{"i":"building-the-login-screen","l":"Building the login screen.","p":["We already have got the specifications of the program, so now let us start building it. Here is the code for the program, commented for explaination. Be sure to give it a try first before seeing the solution.","image","Homework Run the above application (without seeing) debug and test it. Store the application in a file passwordmanager.pyw. and send me a pic on the comments on dev.to or forking this file.","Well this password manager is very secure....But in the next part we will see a mechanism to steal the passwords by a spyware\uD83D\uDE08 So stay tuned for updates by following me."]}],[{"i":"learning-python--intermediate-course-day-27-entry-keypress-event","l":"Learning Python- Intermediate course: Day 27, Entry keypress event","p":["Originally published on the dev.to platform here"]},{"l":"Let us study keypress event in Tkinter entry widget","p":["In the last part we had made a dummy login program (password manager). But the thing was the password was hidden. The password data can only be accessed by the storepassword() function. But today how about making a secret trapdoor available for hackers to steal the passwords\uD83D\uDE08"]},{"l":"Keypress event","p":["We can achieve this by writing a piece of code into the main program which scans whatever we write into the password entry widget and prints it in the command prompt. This can be done using the keypress event. e1.bind(Key,keypress) Whenever any key is pressed, then the function 'keypress' is executed.","Here is the complete code","image","So what is happening? Well, the actual action is taking place in the shell window.","Let me explain what the keypress function does. Whenever any key is pressed, the keypress function is executed. This function first extracts out which key is pressed. Then, it converts the key into an ASCII value and prints it in the command shell using a dot for separation. This way, even characters like backspace and enter key can be detected. Parsing this string to get the password is a piece of cake for the hacker\uD83D\uDE08","The code is wrapped in try-except to prevent blank key presses, which results in errors like ``` Exception in Tkinter callback Traceback (most recent call last): File \"C:\\Users\\aatma\\AppData\\Local\\Programs\\Python\\Python310\\lib\\tkinter__init**.py\", line 1884, in ** call__","File \"C:/Users/aatma/AppData/Local/Programs/Python/Python310/spy.py\", line 6, in keypress print(ord(event.char),end=\".\") TypeError: ord() expected a character, but string of length 0 found","So friends that was all for this part. Stay tuned for updates....."]}],[{"i":"learning-python--intermediate-course-day-28-summary-of-the-week","l":"Learning Python- Intermediate course: Day 28, Summary of the week","p":["Originally published on the dev.to platform here"]},{"l":"Summary of the week","p":["Day 25 We covered the entry, button and the text widget. The button widget is a simple button which executes a action when clicked on. button=tk.Button(form,text=Press Me,command=cmd) The entry widget is a widget which accepts a single line input (text) from the user. entry = tk.Entry(parent). The value of the text can be obtained using the get() function. Textboxes are just the same as entry widgets, the only difference is that we can add multiple lines to it. Just replace 'Entry' by 'Text' and you are done! Using the height and width attributes, we can set the number of input characters in each line. for the textbox. text=TB1.get(1.0, end-1c) returns the value of the text.","Day 26 We practiced the widgets learnt in the previous part by building a password management application. The application consists of two entry widgets and one button widget. In order to hide the password, we can use the show() attribute of the entry widget. TB1=tk.Entry(form,width = 20,show=*) This hides the passwords in the widget.","Day 27 We learnt about the keypress event. The keypress event is run when the user presses a key on the entry widget. In this part, we made a spyware application to scan the keys typed into the entry widget. Be sure to check the program later.","Epilogue- We all know that neither me nor you have ever seen each other. Learning in remote environment is a difficult, and teaching is perhaps even more difficult. Teaching is never a one-way process. When a teacher teaches with pattern, he/she expects that the student must respond back. Either with doubts, remarks or nods of approval. But friends, being remote, we cannot interact with each other. The only way we can connect is through the comments below. So I urge everyone to comment on the posts. Currently I am in doubt whether you all are understanding me or not. Should I speed up the pace or maybe explain more clearly? I am not getting any feedback from you. Any doubts, discussions, remarks or even a simple hi from you is a great source of motivation for me. So I look forward to your comments below...\uD83D\uDE0A","For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways","\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25\uD83D\uDD25 Next day will begin from Tuesday\uD83D\uDCC5"]}],[{"i":"learning-python--intermediate-course-day-29-sliders-in-tkinter","l":"Learning Python- Intermediate course: Day 29, Sliders in Tkinter","p":["Originally published on the dev.to platform here"]},{"l":"Today let us learn all about the slider widget in Tkinter","p":["The slider widget is a widget that helps us choose values from a given range in a very interactive and graphical way."]},{"i":"making-a-slider-widget","l":"Making a slider widget.","p":["We can make the slider widget using the following syntax slider=Scale(master, from_=0, to=10) Parameters","master The main Tk() window.","from_ The starting value of the slider","to the ending value of the slider.","image"]},{"l":"Setting default value","p":["The slider.set() is a method which sets the value of a slider. We can use this to initialize the default value of the slider.","image","The set() method can also be used to dynamically set the value of the slider variable.","The program below is an example of the set() method. There is a button which runs a function which resets the value of the slider back to the default values when pressed.","On pressing the reset button, the value returns back to the default value."]},{"i":"orientation-of-the-slider","l":"Orientation of the slider.","p":["By default, the slider is vertical. But we can use the orient property to set the value of orientation.","image"]},{"i":"getting-the-value-from-the-slider","l":"Getting the value from the slider.","p":["We can get the value of the slider using the slider.get() method. The program below shows how to get the values of the slider using buttons.","image"]},{"l":"Setting the interval length","p":["We can display the values of the sliders using the tickinterval property. We can adjust the interval values of the slider using the tickinterval attribute. For example, setting the value to 10 equal will show the result as","image","While setting the value to 1 will show the entire range","That looked a bit crowded. Didn't it? We can adjust it using the length property of the slider.","Here is the code-"]}],[{"i":"learning-python--intermediate-course-day-31-coordinate-positions","l":"Learning Python- Intermediate course: Day 31, Coordinate positions","p":["Originally published on the dev.to platform here"]},{"l":"Let us now cover the coordinate layout in Tkinter","p":["Today we will make a program which will take in inputs of principle and discount and calculate the total price.","image","Here are the program specs","One label for the text principle","One label for the text discount","One label for the total value","One button show.","One slider for the discount values","One spinbox for the principle amount","Now that we have got all the specs, let's start building the program-","image image","The program works all right, but that's not how we want to display the widgets. We need to adjust the look and feel. We want the first two labels to be adjacent towards the spinbox and slider widgets. For that, we use the coordinate layout. The pack layout is not sufficient as it packs all the widgets into just a centre line. Hence, we will place them coordinately.","We can set the coordinates of the widgets using the place method. Example widget.place(x=30,y=20) Here is the final program, now with the power of place layout.","One thing to note is that the layouts remain the same even if the window is resized."]}],[{"i":"learning-python--intermediate-course-day-32-the-menubutton-widget","l":"Learning Python- Intermediate course: Day 32, The Menubutton Widget","p":["Originally published on the dev.to platform here"]},{"i":"in-this-part-let-us-learn-about-the-menubutton-widget","l":"In this part let us learn about the menubutton widget."},{"l":"Menubutton widget","p":["The menubutton widget is a drop down type of widget. It looks similar to the listbox widget. The menubutton widget is dropped down once the menubutton button is clicked.","Here is a sample program.","MB = Menubutton ( master, text= ) Create a menubutton with text and the window frame parameters.","MB.menu = Menu ( MB, tearoff = 0 ) MB[menu] = MB.menu Create a menu object and configure it with the menubutton.","MB.menu.add_checkbutton ( label=Classification, variable=one ) Add a button to the menubutton and control it using the Intvar() classes. This is very similar to how we operated on checkboxes and radiobuttons. In case you have missed it, you can check it out here","image image image","image image"]},{"i":"the-tearoff-parameter-the-tearoff-parameter-is-present-if-we-want-to-remove-the-window-and-create-a-sub-window-for-the-parameters-for-example-removing-the-tearoff-parameter-to-the-default-settings-will-show-a-result-like-this-","l":"The tearoff parameter. The tearoff parameter is present if we want to remove the window and create a sub-window for the parameters. For example, removing the tearoff parameter to the default settings will show a result like this-","p":["image","But if we click on the horizontal dotted line, the dropdown tears apart into a different window","image We can create multiple windows in such manner. image"]},{"l":"Summary of the week","p":["Learning Python- Intermediate course: Day 29, Sliders in Tkinter We covered sliders in Tkinter. Slider is a type of widget which lets the user choose variable values in a graphical and interactive manner. We saw how to set various parameters like the interval length, length and orientation of the slider. We saw the getter and setter methods of the widget.","Learning Python- Intermediate course: Day 30, Spinbox and Labelbox- We checked out the spinbox and the labelbox widgets. The spinbox widget is a widget which is used to get input from the user navigated through up and down keys. The listbox is a menu type widget which helps the users select from a list of items. We also saw the various types of parameters of the listbox widget, for example the types of selections and length of the listbox. We saw the getter and setter methods of the widget. The type of selection of the listboxes include BROWSE SINGLE MULTIPLE and EXTENDED","Learning Python- Intermediate course: Day 31, Coordinate positions In this part, we made a sample practice program to calculate the discount prices. In this, we used both the spinbox and the slider widgets. In order to place the widgets around in the desired manner, wee used coordinate placing using the .place() method. Using this method, we placed the widgets in proper x and y coordinates.","So friends that was all for this week. Hope you all are having fun \uD83D\uDC4D"]}],[{"i":"learning-python--intermediate-course-day-33-the-menu-widget","l":"Learning Python- Intermediate course: Day 33, The Menu Widget","p":["Originally published on the dev.to platform here"]},{"l":"Today we will cover menu widget in Tkinter","p":["In the previous part, we learnt to use menubutton. Today we will learn a very similar widget called as the menu widget."]},{"l":"The menu widget","p":["The menu widget is a type of widget which lets the users choose actions from a drop down. We see menus everywhere in any GUI application. For example, in the Python IDLE itself there is a men widget.","image","The menu widget is responsible for many important actions. Save, save as, open a file, quitting a program, undo, redo, etc are a few actions to name.","The top-level menus are the one which is displayed just under the title bar of the parent window."]},{"l":"Making a menu widget","p":["We can make a menu widget by using the syntax menubar = Menu(master) This creates an instance of the menu-widget. Afert that, we need ot create an instance of a menubar button by adding parameters to the menu() constructor. That is, file = Menu(menubar, tearoff=0) . This creates a button named file (we add txt later) on the top of the screen. We do that for every button we want to place on the top menu. Example here we add two buttons, file and edit. image","Now we need to add add various commands to it by using the add_comand() method. These are displayed in the dropdown. Example file.add_command(label=New) We can also use the command file.add_separator() to add a horizontal line for separation","After we are done adding the commands, to the dropdown, we can use the command menubar.add_cascade(label=File, menu=file) to set the txt of the button and place it in the main menu.","The entire program is as follows--","image","In the above program, clicking on the buttons will not run any actions, as we have not placed any command on clicking.","So friends that was all for today, Stay tuned and follow me for updates."]}],[{"i":"learning-python--intermediate-course-day-34-toplevel-panedwindow-and-message-widgets","l":"Learning Python- Intermediate course: Day 34, Toplevel, Panedwindow and Message widgets","p":["Originally published on the dev.to platform here"]},{"i":"today-we-will-cover-a-brief-about-the-top-level-paned-window-and-message-widgets","l":"Today we will cover a brief about the Top-level, paned-window and message widgets.","p":["Till now we have covered majority of the widgets. Today's agenda is to have a quick look at three more widgets without going too much into the depth. I will just provide a short explaination and the code for creating the widget. So let's get started."]},{"l":"Top level widget","p":["The Toplevel widget is used to create popup like windows. These toplevel windows are directly managed by the window manager.","The toplevel widget is used to represent some extra information, pop-up, or the group of widgets on the new window. The toplevel windows have the title bars, borders, and other window decorations.","image","On several clicks...."]},{"l":"Panedwindow","p":["The Paned Window widget acts like a Container widget which contains one or more child widgets (panes) arranged horizontally or vertically. The child panes can be resized by the user, by moving the separator lines known as sashes by using the mouse.","Each pane contains only one widget. The Paned Window is used to implement the different layouts in the python applications.","image"]},{"l":"Message widget","p":["The message widget is similar to the label widget. It has a few advantages over the label widget, like it can automatically wrap the text, maintaining a given width or aspect ratio","image","In order to set the text contents of the message widget, we need to create a stringvar() object to store the message and then out it in the message widget.","So friends that was all for this part. Message-box widget coming soon......","Follow me for updates.........."]}],[{"i":"learning-python--intermediate-course-day-35-messagebox-widget","l":"Learning Python- Intermediate course: Day 35, MessageBox widget","p":["Originally oublished on the dev.to platform here"]},{"l":"Today we will cover message box widget in Python"},{"l":"The messagebox widget","p":["The messagebox widget is a widget which is used to represent pop-up message in a Tkinter program.","The program below shows an example of a simple messagebox.","image","Syntax- messagebox.showinfo(title,message)","Similarly The message box has different flavors of boxes","showinfo- show message on popup","showwarning- show warning (with disclaimer sign)","showerror- Show error (with red cross)","askquestiion- Asks the user yes or no","askyesno- same like askquestion","askokcancel Asks the user ok or cancel","askretrycancel asks the user retry or cancel"]},{"l":"Warning","p":["image"]},{"l":"Showing error","p":["image"]},{"l":"Asking question","p":["Asking question is quite similar to askyesno. Both give the same output","image"]},{"l":"Extracting values from the answer","p":["We can get the values of the user entered answer in form of true or false from the user as shown in the program below","On clicking yes,","image","On clicking no"]},{"i":"ask-ok-cancel","l":"Ask ok, cancel","p":["image","We can get the values from the box in the same manner as askyesno"]},{"l":"Ask Retry cancel","p":["image"]}],[{"i":"learning-python--intermediate-course-day-36-summary-of-the-week","l":"Learning Python- Intermediate course: Day 36, Summary of the week","p":["Originally published on the dev.to platform here"]},{"l":"Summary of the week","p":["Day 33 We learnt about the menu widget in Python. The menu widget is used to create dropdown menus for application commands. image","Day 34 We covered three widgets, top-level, paned window and the message widget. The toplevel widget is used to represent some extra information, pop-up, or the group of widgets on the new window. The toplevel windows have the title bars, borders, and other window decorations. The Paned Window widget acts like a Container widget for holding many widgets in place. The message widget is similar to the label widget and is used to display messages.","Day 35 We covered the message-box widget. The message-box widget is used to to display popup messages with different signs and symbols for specific instances of messages like errors or warnings. It can also be used to ask question to user in a yes/no format."]}],[{"i":"learning-python--intermediate-course-day-37-file-handling-in-python","l":"Learning Python- Intermediate course: Day 37, File handling in Python","p":["Originally published on the dev.to platform here"]},{"l":"Today we cover File-handling in Python in a lightning fast speed","p":["Many times we need to save data into files for long-term usage. Today we will learn how to write data into a file and retrieve it."]},{"l":"Opening a file","p":["Python has two types of files, text and binary. But we will now learn only about text files, which are quite popular.","How will the interpreter know when to end a line? Each line in a file has the EOL terminating character (example comma or newline character) which the interpreter reads and processes a new line..","We can open a file into four modes","\"r\" Reading mode","\"w\" Writing mode","\"a\" Appending mode","\"r+\" Both reading and writing","If not passed, then Python will assume it to be “ r ” by default.","Syntax for opening a file We can open a file using the syntax","Note than the file name is case sensitive. So myfile.txt is not equal to Myfile.txt"]},{"l":"Reading from a file","p":["First we make a file named....say myfile.txt","In case the file doesn't exist, we get this error-","We can read the contents of the file using the file.read() method","OUTPUT","We can also return a specific number of characters by adding parameters to the read method. For example","The value returned is a string","We can access the file line by line using the for in loop","This syntax prints out each element of the file in lines."]},{"l":"Writing into a file","p":["When we write into a file, we do not need to create one. If the file in which we want to write doesn't exist, it gets automatically created.","OUTPUT (myfile.txt)","The close() command terminates all the resources in use and frees the system of this particular program.","If we want the text into two separate lines, we can use the newline \\n symbol.","OUTPUT- (myfile.txt)","The write method overrides the file each and every time the file is opened function is called. To avoid this, we can use the append mode to add to the file.","So friends we have covered file handling today. From next parts onwards we will cover object oriented programming."]}],[{"i":"learning-python--intermediate-course-day-39-oop-constructor-init","l":"Learning Python- Intermediate course: Day 39, OOP-Constructor init","p":["Originally published on the dev.to platform here"]},{"l":"Today let us check out class constructors in Python"},{"l":"Constructors in Python","p":["Constructors are class methods which are used to set the class parameters a the time of instantiation. These methods are run automatically when the class is instantiated.","The task of constructors is to initialize (assign values) to the data members of the class when an object of class is created. A constructor can optionally accept arguments as well, just like a regular function."]},{"l":"Syntax","p":["The constructor is created by the __init__ keyword.","Forgetting to write the self keyword will geneate error","The __init__ method runs once class is instantiated. It can be called from outside the class too.","Moreover, it can be called by other methods inside the class. Here is example."]},{"l":"Every class has a constructor","p":["But yesterday, when we created a class, we did not use any constructors right? Then is the above statement false? No. When we do not specify a constructor in a class, a default constructor is generated automatically. This is called the default constructor. When we write a constructor by our own, the default constructor is not generated.","Remember this When you create a class without a constructor, Python automatically creates a default constructor for you that doesn't do anything. Every class must have a constructor, even if it simply relies on the default constructor."]},{"i":"destructors-in-python","l":"Destructors in Python.","p":["The users call Destructor for destroying the object. In Python, developers might not need destructors as much it is needed in the C++ language. This is because Python has a garbage collector whose function is handling memory management automatically. The __del__() function is used as the destructor function in Python. The user can call the __del__() function when all the references of the object have been deleted, and it becomes garbage collected.","The __del__ is pretty much similar to __init__ More about it here"]},{"l":"Parametrized constructors","p":["We can pass parameters to the constructors which set the values of the class 'variables'","Let us see a modification of yesterday's program now using the __init__ constructor."]},{"i":"multiple-constructors","l":"Multiple constructors.","p":["Python does not support explicit multiple constructors, yet there are some ways using which the multiple constructors can be achieved. If multiple __init__ methods are written for the same class, then the latest one overwrites all the previous constructors","One way to use multiple constructors is using *args But that's not for today....","Python natively does not support function overloading - having multiple functions with the same name.","So friends that was all for today! Let us understand how inheritance is implemented in Python tomorrow."]}],[{"i":"learning-python--intermediate-course-day-40-summary-of-the-week-and-more-about-oop","l":"Learning Python- Intermediate course: Day 40, Summary of the week and more about OOP","p":["Originally published on the dev.to platform here"]},{"l":"Today let us summarize the week and check out a more about OOP","p":["Let us first check out a program which shows the implementation of Complex numbers through classes","In the above program, a and b are different objects of the same class. Which means that they have different values of attributes. Object is representative of class. Consider it like this - class is a common noun while the object is a proper noun. Classes are like templated for molding objects.","Why OOP? In software development lifecycle, coding is fifth or sixth stage. First analysis of requirements of clients is done. Developers approach client and get technical review of the requirement, discuss at length with client. Unless we get clarity as what and how is expected coding doesnt start. Then feasibility test is done. budget-wise. then prototype is given to client step by step. Changes are noted. In this whole process, the use of OOP is beneficial. Maintaining, updating and carry forward existing versions to next version can be done easily using OOP. Code flexibility is enhanced. We can make changes to the project without much changes in code using OOP. Also, extension of code becomes very easy. We can add new features without much changes to the old ones. This is why in a popular language like Python, learning about OOP is important."]},{"i":"summary-of-the-week","l":"Summary of the week."},{"l":"Day 37","p":["We learnt about file handling in Python. We can open a file into four modes","\"r\" Reading mode","\"w\" Writing mode","\"a\" Appending mode","\"r+\" Both reading and writing If not passed, then Python will assume it to be “ r ” by default. file = open(myfile.txt, r) Opens the file. We can read the contents of the file using the file.read() method. We can write into a file using the file.write(\\n) method."]},{"l":"Day 38","p":["We learnt about making classes in Python. Classes are object blueprints. Classes are generated using the syntax","In the class methods, the class parameter ( self) is a must. Private methods can be made by writing two underscores before the class name. Private methods cannot be accessed from outside the class."]},{"l":"Day 39","p":["Constructors in Python can be created using the __init__ keyword. A constructor is a special type of member function of a class which initializes objects of a class. The constructor is run when the class is instantiated. The class constructors can be called by other parts of the class or even outside pf the class. If we do not provide a constructor to the class, Python generates one default constructor automatically. We can even pass parameters to the constructors.","So friends that was all for today! Next week plan-","Inheritance","Polymorphism","Deadly Diamond of death"]}],[{"i":"learning-python--intermediate-course-day-41-inheritance-in-python","l":"Learning Python- Intermediate course: Day 41, Inheritance in Python","p":["Originally published on the dev.to platform here"]},{"l":"Today we will learn about inheritance in Python"},{"l":"Inheritance","p":["Inheritance provides Code Reusability. We do not need to write the same piece of code again and again for various subclasses. This increases Flexibility of the code. This means that subclasses can be formed without altering the original classes.","The inherited class can use functions and variables of the derived class"]},{"i":"syntax","l":"Syntax.","p":["Classes can be inherited by passing the name of the superclass to the brackets class inherited(master)","Let us see an example below to demonstrate inheritance in pyuthon"]},{"l":"Explaination","p":["Here, sample() is the masterclass and sasmple2 is the derived class. The derived class sample2 inherits the master class as we pas the name of the master class into the derived class bracket.","class sample2(): This syntax will create class sample2","class sample2(sample): This syntax will create a class sample2 and make it inherit the class sample","Once the class sample2 inherits sample, it can use it's attributes (like here a and b) in it's body. This is why no errors were generated when we used to variables a and b directly in the function fun2. The values fir a and b were assigned in the master class ( sample2 itself ands need not be assigned again . This is an example of code reuse and information hiding","The derived class sample2 can also use the functions declared in the master class. This is how the function fun could be used and run successfully.","I hope you do not have any more doubts, if you have, please feel free to post them in the comments on Dev.to here"]},{"i":"inheritance-of-constructors","l":"Inheritance of constructors.","p":["Constructors are not inherited by default. The example below will make things very clear","In the above example, you would expect the output to be 150 and not 5. But it is not so. This is because of the fact the constructors of the master class are not inherited by the derived classes by default. This means that sample2.__init__ is not the same as sample.__init__.","Why? Well remember In the previous parts we learnt that if we do not provide a constructor to the class, Python provides one default constructor automatically? Something similar happened in this case. We did not provide any constructor to the sample2 class. So python made a default blank constructor in it's place, which had no relation to the master class.","If we want to add the constructor, we can use the following syntax-","Using the super keyword, we can manage the constructors.","Note, even though constructors are not inherited, the arguments of the constructors in both the classes must match. Example shown below","...","Exercise What is the output of the following program? and why?","Solution- The output is","This is because self.a=100 and self.b=200 should haver been written in place of a=100 and b=200"]},{"l":"Function overloading in Python","p":["What if two functions have the same name in the master class as well as the derived class? Well the answer is simple the function in the derived class will be considered. This is know as function overloading.","If we want to use the function in the previous function, then use the super syntax again.","So friends that was all for today. Thank you and hope you are enjoying...."]}],[{"i":"learning-python--intermediate-course-day-42-polymorphism","l":"Learning Python- Intermediate course: Day 42, Polymorphism.","p":["Originally published on the dev.to platform here"]},{"l":"Today we will learn about Polymorphism in Python"},{"l":"What exactly is Polymorphism","p":["Polymorphism is an OOP feature which provides extensibility and flexibility to your code. The major advantage of Polymorphism is flexibility. Polymorphism gives you the the flexibility lost in inheritance.","Poly- many morphism-many forms Polymorphism is the condition of occurrence in different forms."]},{"l":"Polymorphism in operators","p":["We use polymorphism when dealing with operators. For example the + operator is used to add two numbers as well as to coconcate two strings. In the same way, the product operator * is used to multiply two integers, floating numbers as well as two complex numbers in Python. This is an example of polymorphism which we have unknowingly used until now."]},{"l":"Polymorphism in functions","p":["Till now we have come across many functions which take in arguments of various multiple types. For example the print function takes in lists, tuples, numbers, complex numbers as well as strings. Another example is the len() function which takes in any iterable type. when string is passed, it returns the number of characters, when list is passed it returns the number of elements and when a dictionary is passed, it returns the number of key values."]},{"l":"Polymorphism in OOP","p":["Let us now study what is polymorphism in classes and how does it turn out to be useful. Yesterday we saw how the methods with same name are overridden. Polymorphism is something related to functions with the same name. In order to understand what polymorphism is, let us consider the following example.","Study the above example carefully. What we have seen above is an example of polymorphism itself!","Now, chimpanzee and gorilla both derive from the same class- ape. They have same attributes- weight and food. But they have different values for them. We can even add additional methods for each of those classes. But the attributes weight, food, and method eat was derived from the class ape itself. So is there a way to use them without knowing weather the ape is a chimpanzee or a gorilla? This is possible if all of them have same methods (that is overloaded methods.) In other words can we just use their 'apish' characteristics as one by using the methods. This is the central idea behind polymorphism. In Python, Polymorphism is achieved through method overloading.","a is both a ape as well as a chimpanzee. So can we treat a as n ape? so can we treat a, b, c as equal apes? We can using polymorphism. At times, we may need to consider that a,b,c are just apes and not gorillas or chimpanzees and treat them all equally. This decreases the overhead of treating objects of different subclasses species as different entities. For example tomorrow if I want to add an Orangutan subclass, I will not require to go back and change everything I had written earlier. Using Polymorphism I can just treat them as equals. We overload the functions.","Now we can make the polymorphism better by using","So friends that was all for today. Let us learn more about Python in the upcoming days....."]}],[{"i":"learning-python--intermediate-course-day-43-ddd-and-more-on-oop","l":"Learning Python- Intermediate course: Day 43, DDD and more on OOP","p":["Originally published on the dev.to ploatform here"]},{"i":"today-we-will-cover-some-oop-properties-that-are-not-covered-in-python-and-look-at-how-python-resolves-the-deadly-diamond-of-death","l":"Today we will cover some OOP properties that are not covered in Python and look at how Python resolves the Deadly Diamond of Death.","p":["Python is a language mainly designed to use for data oriented analysis. Today, the most popular use of Python is Data science and ML. Although Python is used as a full-stack to some extent, heavy backending applications which require OOP are still made in Java to a certain extent.","Java is OOP. It is the best suited for design patterns and other beautiful OOP stuff. Python is suited for Data science.. This is why probably Python doesn't support a few features of OOP which are critical to design patterns. Two most significant features are Abstract classes and interfaces","Although these features may not be available in core Python, we can still use them with the aid of a module know as abc But that is not for this course.","Disclaimer! Advanced concepts like Multiple inheritance, duck typing, abc module will be covered in the advanced part of this course. This part is only for a brief upon those concepts."]},{"l":"Interfaces","p":["Why do we even need interfaces when Python supports multiple inheritance? An interface is the Java workaround for multiple inheritance. All features of interfaces are covered by two python aspects- multiple inheritance and duck typing.","Still, a few use cases of interfaces are not resolved fully. If you want to make base classes that cannot be instantiated, but provide a specific interface or part of an implementation, interfaces are a must."]},{"l":"Duck typing in Python","p":["\"If it walks like duck, swims like duck, looks like a duck, then it probably should be a duck.\"","In other words, of a class has methods, properties of another class, it is another class. This simply means types go for a toss in Python as long as methods and attributes are the same.","I know you have not understood anything.... this will be covered in detail in the advanced part of this course."]},{"l":"Multiple inheritance in Python","p":["Python supports multiple inheritance. This means that one class can inherit two or more classes. The method resolution is done clearly in Python, unlike C++ and helps resolve most of the issues More about it in the advanced part of this course"]},{"l":"Deadly Diamond of Death","p":["Python has a simple way of handling the diamond problem. The method of the first superclass passed is called.","Let us continue with yesterday's program","If gorilla is passed first, then the cry() method and constructor of gorilla class will run. And if chimpanzee is passed first, then the cry and constructor of chimpanzee class will be run."]},{"l":"Abstract classes","p":["In the above example, ape was the class which needn't be instantiated, and could have been made an abstract class. But Python doesn't support abstract classes in an built way. However, modules can be used to implement abstractions."]},{"l":"abc module","p":["The abc (Abstract Base Classes) is a inbuilt Python module which enables the usage of abstract classes and inheritance in Python. This module provides the metaclass ABCMeta for defining ABCs and a helper class ABC to alternatively define ABCs through inheritance.","The package zope.interface provides an implementation of “object interfaces” for Python. It is maintained by the Zope Toolkit project. The package exports two objects, ‘Interface’ and ‘Attribute’ directly. It also exports several helper methods. It aims to provide stricter semantics and better error messages than Python’s built-in abc module.","The Twisted Plugin System is an alternative to the zope interface.","And at last, before ending today's last session, some philosophical sermon","Python follows the EAFP (Easier to Ask Forgiveness than Permission) rather than the LBLY (Look Before You Leap) philosophy. The EAFP is somewhat linked to the \"duck typing\" style."]}],[{"l":"Contributor Covenant Code of Conduct"},{"l":"Our Pledge","p":["We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community."]},{"l":"Our Standards","p":["Examples of behavior that contributes to a positive environment for our community include:","Demonstrating empathy and kindness toward other people","Being respectful of differing opinions, viewpoints, and experiences","Giving and gracefully accepting constructive feedback","Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience","Focusing on what is best not just for us as individuals, but for the overall community","Examples of unacceptable behavior include:","The use of sexualized language or imagery, and sexual attention or advances of any kind","Trolling, insulting or derogatory comments, and personal or political attacks","Public or private harassment","Publishing others' private information, such as a physical or email address, without their explicit permission","Other conduct which could reasonably be considered inappropriate in a professional setting"]},{"l":"Enforcement Responsibilities","p":["Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.","Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate."]},{"l":"Scope","p":["This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event."]},{"l":"Enforcement","p":["Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at Gmail. All complaints will be reviewed and investigated promptly and fairly.","All community leaders are obligated to respect the privacy and security of the reporter of any incident."]},{"l":"Enforcement Guidelines","p":["Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:"]},{"l":"1. Correction","p":["Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.","Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested."]},{"l":"2. Warning","p":["Community Impact: A violation through a single incident or series of actions.","Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban."]},{"l":"3. Temporary Ban","p":["Community Impact: A serious violation of community standards, including sustained inappropriate behavior.","Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban."]},{"l":"4. Permanent Ban","p":["Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.","Consequence: A permanent ban from any sort of public interaction within the community."]},{"l":"Attribution","p":["This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.","Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.","For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."]}]]